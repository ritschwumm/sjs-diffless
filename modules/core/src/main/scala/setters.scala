package sjs.diffless

import scala.scalajs.js
import org.scalajs.dom.*

import attributes.*

/** AttributeAccess instances for each tag/attribute combination possible */
object setters {
	given Element_scrollTop						:AttributeAccess[scrollTop.type,			Element,				Double]									= AttributeAccess(_.scrollTop	= _)
	given Element_scrollLeft					:AttributeAccess[scrollLeft.type,			Element,				Double]									= AttributeAccess(_.scrollLeft	= _)
	given Element_outerHTML						:AttributeAccess[outerHTML.type,			Element,				String]									= AttributeAccess(_.outerHTML	= _)
	given Element_innerHTML						:AttributeAccess[innerHTML.type,			Element,				String]									= AttributeAccess(_.innerHTML	= _)
	given Element_id							:AttributeAccess[id.type,					Element,				String]									= AttributeAccess(_.id	= _)
	given Element_oncopy						:AttributeAccess[oncopy.type,				Element,				js.Function1[ClipboardEvent, ?]]		= AttributeAccess(_.oncopy	= _)
	given Element_oncut							:AttributeAccess[oncut.type,				Element,				js.Function1[ClipboardEvent, ?]]		= AttributeAccess(_.oncut	= _)
	given Element_onpaste						:AttributeAccess[onpaste.type,				Element,				js.Function1[ClipboardEvent, ?]]		= AttributeAccess(_.onpaste	= _)
	given Element_accessKey						:AttributeAccess[accessKey.type,			Element,				String]									= AttributeAccess(_.accessKey	= _)
	given Element_classList						:AttributeAccess[classList.type,			Element,				DOMTokenList]							= AttributeAccess(_.classList	= _)

	given HTMLBaseElement_target				:AttributeAccess[target.type,				HTMLBaseElement,		String]									= AttributeAccess(_.target	= _)
	given HTMLBaseElement_href					:AttributeAccess[href.type,					HTMLBaseElement,		String]									= AttributeAccess(_.href	= _)

	given HTMLOListElement_start				:AttributeAccess[start.type,				HTMLOListElement,		Int]									= AttributeAccess(_.start	= _)

	given HTMLSelectElement_value				:AttributeAccess[value.type,				HTMLSelectElement,		String]									= AttributeAccess(_.value	= _)
	given HTMLSelectElement_name				:AttributeAccess[name.type,					HTMLSelectElement,		String]									= AttributeAccess(_.name	= _)
	given HTMLSelectElement_size				:AttributeAccess[size.type,					HTMLSelectElement,		Int]									= AttributeAccess(_.size	= _)
	given HTMLSelectElement_selectedIndex		:AttributeAccess[selectedIndex.type,		HTMLSelectElement,		Int]									= AttributeAccess(_.selectedIndex	= _)
	given HTMLSelectElement_multiple			:AttributeAccess[multiple.type,				HTMLSelectElement,		Boolean]								= AttributeAccess(_.multiple	= _)
	given HTMLSelectElement_disabled			:AttributeAccess[disabled.type,				HTMLSelectElement,		Boolean]								= AttributeAccess(_.disabled	= _)
	given HTMLSelectElement_autofocus			:AttributeAccess[autofocus.type,			HTMLSelectElement,		Boolean]								= AttributeAccess(_.autofocus	= _)
	given HTMLSelectElement_required			:AttributeAccess[required.type,				HTMLSelectElement,		Boolean]								= AttributeAccess(_.required	= _)

	// NOTE gone since scala-js-dom 1.0.0
	//given HTMLBlockElement_width				:AttributeAccess[width.type,				HTMLBlockElement,		Double]									= AttributeAccess(_.width	= _)
	//given HTMLBlockElement_cite				:AttributeAccess[citeAttr.type,			HTMLBlockElement,		String]									= AttributeAccess(_.cite	= _)

	given HTMLMetaElement_httpEquiv				:AttributeAccess[httpEquiv.type,			HTMLMetaElement,		String]									= AttributeAccess(_.httpEquiv	= _)
	given HTMLMetaElement_name					:AttributeAccess[name.type,					HTMLMetaElement,		String]									= AttributeAccess(_.name	= _)
	given HTMLMetaElement_content				:AttributeAccess[content.type,				HTMLMetaElement,		String]									= AttributeAccess(_.content	= _)
	given HTMLMetaElement_url					:AttributeAccess[url.type,					HTMLMetaElement,		String]									= AttributeAccess(_.url	= _)
	given HTMLMetaElement_charset				:AttributeAccess[charset.type,				HTMLMetaElement,		String]									= AttributeAccess(_.charset	= _)

	// NOTE gone since scala-js-dom 1.0.0
	//given HTMLDDElement_noWrap				:AttributeAccess[noWrap.type,				HTMLDDElement,			Boolean]								= AttributeAccess(_.noWrap	= _)

	given HTMLLinkElement_rel					:AttributeAccess[rel.type,					HTMLLinkElement,		String]									= AttributeAccess(_.rel	= _)
	given HTMLLinkElement_target				:AttributeAccess[target.type,				HTMLLinkElement,		String]									= AttributeAccess(_.target	= _)
	given HTMLLinkElement_href					:AttributeAccess[href.type,					HTMLLinkElement,		String]									= AttributeAccess(_.href	= _)
	given HTMLLinkElement_media					:AttributeAccess[media.type,				HTMLLinkElement,		String]									= AttributeAccess(_.media	= _)
	given HTMLLinkElement_rev					:AttributeAccess[rev.type,					HTMLLinkElement,		String]									= AttributeAccess(_.rev	= _)
	given HTMLLinkElement_type					:AttributeAccess[`type`.type,				HTMLLinkElement,		String]									= AttributeAccess(_.`type`	= _)
	given HTMLLinkElement_hreflang				:AttributeAccess[hreflang.type,				HTMLLinkElement,		String]									= AttributeAccess(_.hreflang	= _)

	given HTMLOptionElement_defaultSelected		:AttributeAccess[defaultSelected.type,		HTMLOptionElement,		Boolean]								= AttributeAccess(_.defaultSelected	= _)
	given HTMLOptionElement_value				:AttributeAccess[value.type,				HTMLOptionElement,		String]									= AttributeAccess(_.value	= _)
	given HTMLOptionElement_text				:AttributeAccess[textAttr.type,				HTMLOptionElement,		String]									= AttributeAccess(_.text	= _)
	given HTMLOptionElement_label				:AttributeAccess[labelAttr.type,			HTMLOptionElement,		String]									= AttributeAccess(_.label	= _)
	given HTMLOptionElement_selected			:AttributeAccess[selected.type,				HTMLOptionElement,		Boolean]								= AttributeAccess(_.selected	= _)
	given HTMLOptionElement_disabled			:AttributeAccess[disabled.type,				HTMLOptionElement,		Boolean]								= AttributeAccess(_.disabled	= _)

	given HTMLMapElement_name					:AttributeAccess[name.type,					HTMLMapElement,			String]									= AttributeAccess(_.name	= _)

	given HTMLMenuElement_type					:AttributeAccess[`type`.type,				HTMLMenuElement,		String]									= AttributeAccess(_.`type`	= _)

	given HTMLImageElement_width				:AttributeAccess[width.type,				HTMLImageElement,		Int]									= AttributeAccess(_.width	= _)
	given HTMLImageElement_naturalHeight		:AttributeAccess[naturalHeight.type,		HTMLImageElement,		Int]									= AttributeAccess(_.naturalHeight	= _)
	given HTMLImageElement_alt					:AttributeAccess[alt.type,					HTMLImageElement,		String]									= AttributeAccess(_.alt	= _)
	given HTMLImageElement_src					:AttributeAccess[src.type,					HTMLImageElement,		String]									= AttributeAccess(_.src	= _)
	given HTMLImageElement_useMap				:AttributeAccess[useMap.type,				HTMLImageElement,		String]									= AttributeAccess(_.useMap	= _)
	given HTMLImageElement_naturalWidth			:AttributeAccess[naturalWidth.type,			HTMLImageElement,		Int]									= AttributeAccess(_.naturalWidth	= _)
	given HTMLImageElement_height				:AttributeAccess[height.type,				HTMLImageElement,		Int]									= AttributeAccess(_.height	= _)
	given HTMLImageElement_href					:AttributeAccess[href.type,					HTMLImageElement,		String]									= AttributeAccess(_.href	= _)
	given HTMLImageElement_isMap				:AttributeAccess[isMap.type,				HTMLImageElement,		Boolean]								= AttributeAccess(_.isMap	= _)
	given HTMLImageElement_onload				:AttributeAccess[onload.type,				HTMLImageElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onload	= _)

	given HTMLAreaElement_protocol				:AttributeAccess[protocol.type,				HTMLAreaElement,		String]									= AttributeAccess(_.protocol	= _)
	given HTMLAreaElement_search				:AttributeAccess[search.type,				HTMLAreaElement,		String]									= AttributeAccess(_.search	= _)
	given HTMLAreaElement_alt					:AttributeAccess[alt.type,					HTMLAreaElement,		String]									= AttributeAccess(_.alt	= _)
	given HTMLAreaElement_coords				:AttributeAccess[coords.type,				HTMLAreaElement,		String]									= AttributeAccess(_.coords	= _)
	given HTMLAreaElement_hostname				:AttributeAccess[hostname.type,				HTMLAreaElement,		String]									= AttributeAccess(_.hostname	= _)
	given HTMLAreaElement_port					:AttributeAccess[port.type,					HTMLAreaElement,		String]									= AttributeAccess(_.port	= _)
	given HTMLAreaElement_pathname				:AttributeAccess[pathname.type,				HTMLAreaElement,		String]									= AttributeAccess(_.pathname	= _)
	given HTMLAreaElement_host					:AttributeAccess[host.type,					HTMLAreaElement,		String]									= AttributeAccess(_.host	= _)
	given HTMLAreaElement_hash					:AttributeAccess[hash.type,					HTMLAreaElement,		String]									= AttributeAccess(_.hash	= _)
	given HTMLAreaElement_target				:AttributeAccess[target.type,				HTMLAreaElement,		String]									= AttributeAccess(_.target	= _)
	given HTMLAreaElement_href					:AttributeAccess[href.type,					HTMLAreaElement,		String]									= AttributeAccess(_.href	= _)
	given HTMLAreaElement_shape					:AttributeAccess[shape.type,				HTMLAreaElement,		String]									= AttributeAccess(_.shape	= _)

	given HTMLButtonElement_value				:AttributeAccess[value.type,				HTMLButtonElement,		String]									= AttributeAccess(_.value	= _)
	given HTMLButtonElement_status				:AttributeAccess[status.type,				HTMLButtonElement,		js.Any]									= AttributeAccess(_.status	= _)
	given HTMLButtonElement_name				:AttributeAccess[name.type,					HTMLButtonElement,		String]									= AttributeAccess(_.name	= _)
	given HTMLButtonElement_type				:AttributeAccess[`type`.type,				HTMLButtonElement,		String]									= AttributeAccess(_.`type`	= _)
	given HTMLButtonElement_disabled			:AttributeAccess[disabled.type,				HTMLButtonElement,		Boolean]								= AttributeAccess(_.disabled	= _)
	given HTMLButtonElement_formTarget			:AttributeAccess[formTarget.type,			HTMLButtonElement,		String]									= AttributeAccess(_.formTarget	= _)
	given HTMLButtonElement_formAction			:AttributeAccess[formAction.type,			HTMLButtonElement,		String]									= AttributeAccess(_.formAction	= _)
	given HTMLButtonElement_autofocus			:AttributeAccess[autofocus.type,			HTMLButtonElement,		Boolean]								= AttributeAccess(_.autofocus	= _)
	given HTMLButtonElement_formNoValidate		:AttributeAccess[formNoValidate.type,		HTMLButtonElement,		String]									= AttributeAccess(_.formNoValidate	= _)
	given HTMLButtonElement_formEnctype			:AttributeAccess[formEnctype.type,			HTMLButtonElement,		String]									= AttributeAccess(_.formEnctype	= _)
	given HTMLButtonElement_formMethod			:AttributeAccess[formMethod.type,			HTMLButtonElement,		String]									= AttributeAccess(_.formMethod	= _)

	given HTMLSourceElement_src					:AttributeAccess[src.type,					HTMLSourceElement,		String]									= AttributeAccess(_.src	= _)
	given HTMLSourceElement_media				:AttributeAccess[media.type,				HTMLSourceElement,		String]									= AttributeAccess(_.media	= _)
	given HTMLSourceElement_type				:AttributeAccess[`type`.type,				HTMLSourceElement,		String]									= AttributeAccess(_.`type`	= _)

	given HTMLScriptElement_defer				:AttributeAccess[defer.type,				HTMLScriptElement,		Boolean]								= AttributeAccess(_.defer	= _)
	given HTMLScriptElement_text				:AttributeAccess[textAttr.type,				HTMLScriptElement,		String]									= AttributeAccess(_.text	= _)
	given HTMLScriptElement_src					:AttributeAccess[src.type,					HTMLScriptElement,		String]									= AttributeAccess(_.src	= _)
	given HTMLScriptElement_charset				:AttributeAccess[charset.type,				HTMLScriptElement,		String]									= AttributeAccess(_.charset	= _)
	given HTMLScriptElement_type				:AttributeAccess[`type`.type,				HTMLScriptElement,		String]									= AttributeAccess(_.`type`	= _)
	given HTMLScriptElement_event				:AttributeAccess[event.type,				HTMLScriptElement,		String]									= AttributeAccess(_.event	= _)
	given HTMLScriptElement_async				:AttributeAccess[async.type,				HTMLScriptElement,		Boolean]								= AttributeAccess(_.async	= _)
	given HTMLScriptElement_onload				:AttributeAccess[onload.type,				HTMLScriptElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onload	= _)

	given HTMLTableRowElement_borderColorLight	:AttributeAccess[borderColorLight.type,		HTMLTableRowElement,	js.Any]									= AttributeAccess(_.borderColorLight	= _)
	given HTMLTableRowElement_borderColor		:AttributeAccess[borderColor.type,			HTMLTableRowElement,	js.Any]									= AttributeAccess(_.borderColor	= _)
	given HTMLTableRowElement_height			:AttributeAccess[height.type,				HTMLTableRowElement,	js.Any]									= AttributeAccess(_.height	= _)
	given HTMLTableRowElement_borderColorDark	:AttributeAccess[borderColorDark.type,		HTMLTableRowElement,	js.Any]									= AttributeAccess(_.borderColorDark	= _)

	given HTMLQuoteElement_dateTime				:AttributeAccess[dateTime.type,				HTMLQuoteElement,		String]									= AttributeAccess(_.dateTime	= _)
	given HTMLQuoteElement_cite					:AttributeAccess[citeAttr.type,				HTMLQuoteElement,		String]									= AttributeAccess(_.cite	= _)

	given HTMLLabelElement_htmlFor				:AttributeAccess[htmlFor.type,				HTMLLabelElement,		String]									= AttributeAccess(_.htmlFor	= _)

	given HTMLLegendElement_align				:AttributeAccess[align.type,				HTMLLegendElement,		String]									= AttributeAccess(_.align	= _)

	given HTMLLIElement_value					:AttributeAccess[value.type,				HTMLLIElement,			Int]									= AttributeAccess(_.value	= _)

	given HTMLIFrameElement_width				:AttributeAccess[width.type,				HTMLIFrameElement,		String]									= AttributeAccess(_.width	= _)
	given HTMLIFrameElement_src					:AttributeAccess[src.type,					HTMLIFrameElement,		String]									= AttributeAccess(_.src	= _)
	given HTMLIFrameElement_name				:AttributeAccess[name.type,					HTMLIFrameElement,		String]									= AttributeAccess(_.name	= _)
	given HTMLIFrameElement_height				:AttributeAccess[height.type,				HTMLIFrameElement,		String]									= AttributeAccess(_.height	= _)
	given HTMLIFrameElement_border				:AttributeAccess[border.type,				HTMLIFrameElement,		String]									= AttributeAccess(_.border	= _)
	given HTMLIFrameElement_security			:AttributeAccess[security.type,				HTMLIFrameElement,		js.Any]									= AttributeAccess(_.security	= _)
	given HTMLIFrameElement_onload				:AttributeAccess[onload.type,				HTMLIFrameElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onload	= _)
	given HTMLIFrameElement_sandbox				:AttributeAccess[sandbox.type,				HTMLIFrameElement,		DOMSettableTokenList]					= AttributeAccess(_.sandbox	= _)

	given HTMLBodyElement_scroll					:AttributeAccess[scroll.type,				HTMLBodyElement,		String]									= AttributeAccess(_.scroll	= _)
	given HTMLBodyElement_ononline				:AttributeAccess[ononline.type,				HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.ononline	= _)
	given HTMLBodyElement_onmessage				:AttributeAccess[onmessage.type,			HTMLBodyElement,		js.Function1[MessageEvent, ?]]			= AttributeAccess(_.onmessage	= _)
	given HTMLBodyElement_onerror				:AttributeAccess[onerror.type,				HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onerror	= _)
	given HTMLBodyElement_onresize				:AttributeAccess[onresize.type,				HTMLBodyElement,		js.Function1[UIEvent, ?]]				= AttributeAccess(_.onresize	= _)
	given HTMLBodyElement_onafterprint			:AttributeAccess[onafterprint.type,			HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onafterprint	= _)
	given HTMLBodyElement_onbeforeprint			:AttributeAccess[onbeforeprint.type,		HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onbeforeprint	= _)
	given HTMLBodyElement_onoffline				:AttributeAccess[onoffline.type,			HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onoffline	= _)
	given HTMLBodyElement_onunload				:AttributeAccess[onunload.type,				HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onunload	= _)
	given HTMLBodyElement_onhashchange			:AttributeAccess[onhashchange.type,			HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onhashchange	= _)
	given HTMLBodyElement_onload				:AttributeAccess[onload.type,				HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onload	= _)
	given HTMLBodyElement_onbeforeunload		:AttributeAccess[onbeforeunload.type,		HTMLBodyElement,		js.Function1[BeforeUnloadEvent, ?]]		= AttributeAccess(_.onbeforeunload	= _)
	given HTMLBodyElement_onstorage				:AttributeAccess[onstorage.type,			HTMLBodyElement,		js.Function1[StorageEvent, ?]]			= AttributeAccess(_.onstorage	= _)
	given HTMLBodyElement_onpopstate			:AttributeAccess[onpopstate.type,			HTMLBodyElement,		js.Function1[PopStateEvent, ?]]			= AttributeAccess(_.onpopstate	= _)

	given HTMLInputElement_width				:AttributeAccess[width.type,				HTMLInputElement,		String]									= AttributeAccess(_.width	= _)
	given HTMLInputElement_status				:AttributeAccess[status.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.status	= _)
	given HTMLInputElement_selectionStart		:AttributeAccess[selectionStart.type,		HTMLInputElement,		Int]									= AttributeAccess(_.selectionStart	= _)
	given HTMLInputElement_indeterminate		:AttributeAccess[indeterminate.type,		HTMLInputElement,		Boolean]								= AttributeAccess(_.indeterminate	= _)
	given HTMLInputElement_readOnly				:AttributeAccess[readOnly.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.readOnly	= _)
	given HTMLInputElement_size					:AttributeAccess[size.type,					HTMLInputElement,		Int]									= AttributeAccess(_.size	= _)
	given HTMLInputElement_selectionEnd			:AttributeAccess[selectionEnd.type,			HTMLInputElement,		Int]									= AttributeAccess(_.selectionEnd	= _)
	given HTMLInputElement_accept				:AttributeAccess[accept.type,				HTMLInputElement,		String]									= AttributeAccess(_.accept	= _)
	given HTMLInputElement_alt					:AttributeAccess[alt.type,					HTMLInputElement,		String]									= AttributeAccess(_.alt	= _)
	given HTMLInputElement_defaultChecked		:AttributeAccess[defaultChecked.type,		HTMLInputElement,		Boolean]								= AttributeAccess(_.defaultChecked	= _)
	given HTMLInputElement_value				:AttributeAccess[value.type,				HTMLInputElement,		String]									= AttributeAccess(_.value	= _)
	given HTMLInputElement_src					:AttributeAccess[src.type,					HTMLInputElement,		String]									= AttributeAccess(_.src	= _)
	given HTMLInputElement_name					:AttributeAccess[name.type,					HTMLInputElement,		String]									= AttributeAccess(_.name	= _)
	given HTMLInputElement_height				:AttributeAccess[height.type,				HTMLInputElement,		String]									= AttributeAccess(_.height	= _)
	given HTMLInputElement_checked				:AttributeAccess[checked.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.checked	= _)
	given HTMLInputElement_disabled				:AttributeAccess[disabled.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.disabled	= _)
	given HTMLInputElement_maxLength			:AttributeAccess[maxLength.type,			HTMLInputElement,		Int]									= AttributeAccess(_.maxLength	= _)
	given HTMLInputElement_type					:AttributeAccess[`type`.type,				HTMLInputElement,		String]									= AttributeAccess(_.`type`	= _)
	given HTMLInputElement_defaultValue			:AttributeAccess[defaultValue.type,			HTMLInputElement,		String]									= AttributeAccess(_.defaultValue	= _)
	given HTMLInputElement_files				:AttributeAccess[files.type,				HTMLInputElement,		FileList]								= AttributeAccess(_.files	= _)
	given HTMLInputElement_max					:AttributeAccess[max.type,					HTMLInputElement,		String]									= AttributeAccess(_.max	= _)
	given HTMLInputElement_formTarget			:AttributeAccess[formTarget.type,			HTMLInputElement,		String]									= AttributeAccess(_.formTarget	= _)
	given HTMLInputElement_step					:AttributeAccess[step.type,					HTMLInputElement,		String]									= AttributeAccess(_.step	= _)
	given HTMLInputElement_autofocus			:AttributeAccess[autofocus.type,			HTMLInputElement,		Boolean]								= AttributeAccess(_.autofocus	= _)
	given HTMLInputElement_required				:AttributeAccess[required.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.required	= _)
	given HTMLInputElement_formEnctype			:AttributeAccess[formEnctype.type,			HTMLInputElement,		String]									= AttributeAccess(_.formEnctype	= _)
	given HTMLInputElement_valueAsNumber		:AttributeAccess[valueAsNumber.type,		HTMLInputElement,		Double]									= AttributeAccess(_.valueAsNumber	= _)
	given HTMLInputElement_placeholder			:AttributeAccess[placeholder.type,			HTMLInputElement,		String]									= AttributeAccess(_.placeholder	= _)
	given HTMLInputElement_formMethod			:AttributeAccess[formMethod.type,			HTMLInputElement,		String]									= AttributeAccess(_.formMethod	= _)
	given HTMLInputElement_list					:AttributeAccess[list.type,					HTMLInputElement,		HTMLElement]							= AttributeAccess(_.list	= _)
	given HTMLInputElement_autocomplete			:AttributeAccess[autocomplete.type,			HTMLInputElement,		String]									= AttributeAccess(_.autocomplete	= _)
	given HTMLInputElement_min					:AttributeAccess[min.type,					HTMLInputElement,		String]									= AttributeAccess(_.min	= _)
	given HTMLInputElement_formAction			:AttributeAccess[formAction.type,			HTMLInputElement,		String]									= AttributeAccess(_.formAction	= _)
	given HTMLInputElement_pattern				:AttributeAccess[pattern.type,				HTMLInputElement,		String]									= AttributeAccess(_.pattern	= _)
	given HTMLInputElement_formNoValidate		:AttributeAccess[formNoValidate.type,		HTMLInputElement,		String]									= AttributeAccess(_.formNoValidate	= _)
	given HTMLInputElement_multiple				:AttributeAccess[multiple.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.multiple	= _)

	given HTMLAnchorElement_rel					:AttributeAccess[rel.type,					HTMLAnchorElement,		String]									= AttributeAccess(_.rel	= _)
	given HTMLAnchorElement_protocol			:AttributeAccess[protocol.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.protocol	= _)
	given HTMLAnchorElement_search				:AttributeAccess[search.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.search	= _)
	given HTMLAnchorElement_hostname			:AttributeAccess[hostname.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.hostname	= _)
	given HTMLAnchorElement_pathname			:AttributeAccess[pathname.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.pathname	= _)
	given HTMLAnchorElement_target				:AttributeAccess[target.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.target	= _)
	given HTMLAnchorElement_href				:AttributeAccess[href.type,					HTMLAnchorElement,		String]									= AttributeAccess(_.href	= _)
	given HTMLAnchorElement_charset				:AttributeAccess[charset.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.charset	= _)
	given HTMLAnchorElement_hreflang			:AttributeAccess[hreflang.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.hreflang	= _)
	given HTMLAnchorElement_port				:AttributeAccess[port.type,					HTMLAnchorElement,		String]									= AttributeAccess(_.port	= _)
	given HTMLAnchorElement_host				:AttributeAccess[host.type,					HTMLAnchorElement,		String]									= AttributeAccess(_.host	= _)
	given HTMLAnchorElement_hash				:AttributeAccess[hash.type,					HTMLAnchorElement,		String]									= AttributeAccess(_.hash	= _)
	given HTMLAnchorElement_type				:AttributeAccess[`type`.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.`type`	= _)
	given HTMLAnchorElement_mimeType			:AttributeAccess[mimeType.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.mimeType	= _)
	given HTMLAnchorElement_text				:AttributeAccess[textAttr.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.text	= _)
	// TODO hack: as download is experimental, it's not in the API as a property yet
	given HTMLAnchorElement_download			:AttributeAccess[download.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.setAttribute ("download", _))


	given HTMLParamElement_value				:AttributeAccess[value.type,				HTMLParamElement,		String]									= AttributeAccess(_.value	= _)
	given HTMLParamElement_name					:AttributeAccess[name.type,					HTMLParamElement,		String]									= AttributeAccess(_.name	= _)

	// NOTE gone since scala-js-dom 1.0.0
	//given HTMLPhraseElement_dateTime			:AttributeAccess[dateTime.type,			HTMLPhraseElement,		String]									= AttributeAccess(_.dateTime	= _)

	given HTMLCanvasElement_width				:AttributeAccess[width.type,				HTMLCanvasElement,		Int]									= AttributeAccess(_.width	= _)
	given HTMLCanvasElement_height				:AttributeAccess[height.type,				HTMLCanvasElement,		Int]									= AttributeAccess(_.height	= _)

	given HTMLTitleElement_text					:AttributeAccess[textAttr.type,				HTMLTitleElement,		String]									= AttributeAccess(_.text	= _)

	given HTMLStyleElement_media				:AttributeAccess[media.type,				HTMLStyleElement,		String]									= AttributeAccess(_.media	= _)
	given HTMLStyleElement_type					:AttributeAccess[`type`.type,				HTMLStyleElement,		String]									= AttributeAccess(_.`type`	= _)

	given HTMLTableCellElement_colSpan			:AttributeAccess[colSpan.type,				HTMLTableCellElement,	Int]									= AttributeAccess(_.colSpan	= _)
	given HTMLTableCellElement_rowSpan			:AttributeAccess[rowSpan.type,				HTMLTableCellElement,	Int]									= AttributeAccess(_.rowSpan	= _)

	given HTMLTextAreaElement_value				:AttributeAccess[value.type,				HTMLTextAreaElement,	String]									= AttributeAccess(_.value	= _)
	given HTMLTextAreaElement_status			:AttributeAccess[status.type,				HTMLTextAreaElement,	js.Any]									= AttributeAccess(_.status	= _)
	given HTMLTextAreaElement_name				:AttributeAccess[name.type,					HTMLTextAreaElement,	String]									= AttributeAccess(_.name	= _)
	given HTMLTextAreaElement_disabled			:AttributeAccess[disabled.type,				HTMLTextAreaElement,	Boolean]								= AttributeAccess(_.disabled	= _)
	given HTMLTextAreaElement_selectionStart	:AttributeAccess[selectionStart.type,		HTMLTextAreaElement,	Int]									= AttributeAccess(_.selectionStart	= _)
	given HTMLTextAreaElement_rows				:AttributeAccess[rows.type,					HTMLTextAreaElement,	Int]									= AttributeAccess(_.rows	= _)
	given HTMLTextAreaElement_cols				:AttributeAccess[cols.type,					HTMLTextAreaElement,	Int]									= AttributeAccess(_.cols	= _)
	given HTMLTextAreaElement_readOnly			:AttributeAccess[readOnly.type,				HTMLTextAreaElement,	Boolean]								= AttributeAccess(_.readOnly	= _)
	given HTMLTextAreaElement_wrap				:AttributeAccess[wrap.type,					HTMLTextAreaElement,	String]									= AttributeAccess(_.wrap	= _)
	given HTMLTextAreaElement_selectionEnd		:AttributeAccess[selectionEnd.type,			HTMLTextAreaElement,	Int]									= AttributeAccess(_.selectionEnd	= _)
	given HTMLTextAreaElement_defaultValue		:AttributeAccess[defaultValue.type,			HTMLTextAreaElement,	String]									= AttributeAccess(_.defaultValue	= _)
	given HTMLTextAreaElement_autofocus			:AttributeAccess[autofocus.type,			HTMLTextAreaElement,	Boolean]								= AttributeAccess(_.autofocus	= _)
	given HTMLTextAreaElement_required			:AttributeAccess[required.type,				HTMLTextAreaElement,	Boolean]								= AttributeAccess(_.required	= _)
	given HTMLTextAreaElement_maxLength			:AttributeAccess[maxLength.type,			HTMLTextAreaElement,	Int]									= AttributeAccess(_.maxLength	= _)
	given HTMLTextAreaElement_placeholder		:AttributeAccess[placeholder.type,			HTMLTextAreaElement,	String]									= AttributeAccess(_.placeholder	= _)

	given HTMLModElement_dateTime				:AttributeAccess[dateTime.type,				HTMLModElement,			String]									= AttributeAccess(_.dateTime	= _)
	given HTMLModElement_cite					:AttributeAccess[citeAttr.type,				HTMLModElement,			String]									= AttributeAccess(_.cite	= _)

	given HTMLTableColElement_span				:AttributeAccess[spanAttr.type,				HTMLTableColElement,	Int]									= AttributeAccess(_.span	= _)

	given HTMLMediaElement_loop					:AttributeAccess[loop.type,					HTMLMediaElement,		Boolean]								= AttributeAccess(_.loop	= _)
	given HTMLMediaElement_autoplay				:AttributeAccess[autoplay.type,				HTMLMediaElement,		Boolean]								= AttributeAccess(_.autoplay	= _)
	given HTMLMediaElement_controls				:AttributeAccess[controls.type,				HTMLMediaElement,		Boolean]								= AttributeAccess(_.controls	= _)
	given HTMLMediaElement_volume				:AttributeAccess[volume.type,				HTMLMediaElement,		Double]									= AttributeAccess(_.volume	= _)
	given HTMLMediaElement_src					:AttributeAccess[src.type,					HTMLMediaElement,		String]									= AttributeAccess(_.src	= _)
	given HTMLMediaElement_playbackRate			:AttributeAccess[playbackRate.type,			HTMLMediaElement,		Double]									= AttributeAccess(_.playbackRate	= _)
	given HTMLMediaElement_muted				:AttributeAccess[muted.type,				HTMLMediaElement,		Boolean]								= AttributeAccess(_.muted	= _)
	given HTMLMediaElement_defaultPlaybackRate	:AttributeAccess[defaultPlaybackRate.type,	HTMLMediaElement,		Double]									= AttributeAccess(_.defaultPlaybackRate	= _)
	given HTMLMediaElement_currentTime			:AttributeAccess[currentTime.type,			HTMLMediaElement,		Double]									= AttributeAccess(_.currentTime	= _)
	given HTMLMediaElement_preload				:AttributeAccess[preload.type,				HTMLMediaElement,		String]									= AttributeAccess(_.preload	= _)

	// NOTE gone since scala-js-dom 1.0.0
	//given HTMLDTElement_noWrap				:AttributeAccess[noWrap.type,				HTMLDTElement,			Boolean]								= AttributeAccess(_.noWrap	= _)

	given HTMLFieldSetElement_disabled			:AttributeAccess[disabled.type,				HTMLFieldSetElement,	Boolean]								= AttributeAccess(_.disabled	= _)

	given HTMLElement_onblur					:AttributeAccess[onblur.type,				HTMLElement,			js.Function1[FocusEvent, ?]]			= AttributeAccess(_.onblur	= _)
	given HTMLElement_onfocus					:AttributeAccess[onfocus.type,				HTMLElement,			js.Function1[FocusEvent, ?]]			= AttributeAccess(_.onfocus	= _)
	given HTMLElement_onmouseleave				:AttributeAccess[onmouseleave.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmouseleave	= _)
	given HTMLElement_onbeforecut				:AttributeAccess[onbeforecut.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.onbeforecut	= _)
	given HTMLElement_onkeydown					:AttributeAccess[onkeydown.type,			HTMLElement,			js.Function1[KeyboardEvent, ?]]			= AttributeAccess(_.onkeydown	= _)
	given HTMLElement_onkeyup					:AttributeAccess[onkeyup.type,				HTMLElement,			js.Function1[KeyboardEvent, ?]]			= AttributeAccess(_.onkeyup	= _)
	given HTMLElement_onreset					:AttributeAccess[onreset.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onreset	= _)
	given HTMLElement_onhelp					:AttributeAccess[onhelp.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onhelp	= _)
	given HTMLElement_ondragleave				:AttributeAccess[ondragleave.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondragleave	= _)
	given HTMLElement_className					:AttributeAccess[className.type,			HTMLElement,			String]									= AttributeAccess(_.className	= _)
	given HTMLElement_onfocusin					:AttributeAccess[onfocusin.type,			HTMLElement,			js.Function1[FocusEvent, ?]]			= AttributeAccess(_.onfocusin	= _)
	given HTMLElement_onseeked					:AttributeAccess[onseeked.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onseeked	= _)
	given HTMLElement_recordNumber				:AttributeAccess[recordNumber.type,			HTMLElement,			js.Any]									= AttributeAccess(_.recordNumber	= _)
	given HTMLElement_title						:AttributeAccess[titleAttr.type,			HTMLElement,			String]									= AttributeAccess(_.title	= _)
	given HTMLElement_ondurationchange			:AttributeAccess[ondurationchange.type,		HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.ondurationchange	= _)
	given HTMLElement_dir						:AttributeAccess[dir.type,					HTMLElement,			String]									= AttributeAccess(_.dir	= _)
	given HTMLElement_onemptied					:AttributeAccess[onemptied.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onemptied	= _)
	given HTMLElement_onseeking					:AttributeAccess[onseeking.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onseeking	= _)
	given HTMLElement_oncanplay					:AttributeAccess[oncanplay.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.oncanplay	= _)
	given HTMLElement_ondeactivate				:AttributeAccess[ondeactivate.type,			HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.ondeactivate	= _)
	given HTMLElement_onloadstart				:AttributeAccess[onloadstart.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onloadstart	= _)
	given HTMLElement_ondragenter				:AttributeAccess[ondragenter.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondragenter	= _)
	given HTMLElement_onsubmit					:AttributeAccess[onsubmit.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onsubmit	= _)
	given HTMLElement_onchange					:AttributeAccess[onchange.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onchange	= _)
	given HTMLElement_onbeforeactivate			:AttributeAccess[onbeforeactivate.type,		HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onbeforeactivate	= _)
	given HTMLElement_oncanplaythrough			:AttributeAccess[oncanplaythrough.type,		HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.oncanplaythrough	= _)
	given HTMLElement_onsuspend					:AttributeAccess[onsuspend.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onsuspend	= _)
	given HTMLElement_readyState				:AttributeAccess[readyState.type,			HTMLElement,			js.Any]									= AttributeAccess(_.readyState	= _)
	given HTMLElement_onmouseenter				:AttributeAccess[onmouseenter.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmouseenter	= _)
	given HTMLElement_onmouseout				:AttributeAccess[onmouseout.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmouseout	= _)
	given HTMLElement_parentElement				:AttributeAccess[parentElement.type,		HTMLElement,			HTMLElement]							= AttributeAccess(_.parentElement	= _)
	given HTMLElement_onmousewheel				:AttributeAccess[onmousewheel.type,			HTMLElement,			js.Function1[WheelEvent, ?]]			= AttributeAccess(_.onmousewheel	= _)
	given HTMLElement_onvolumechange			:AttributeAccess[onvolumechange.type,		HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onvolumechange	= _)
	given HTMLElement_filters					:AttributeAccess[filters.type,				HTMLElement,			Object]									= AttributeAccess(_.filters	= _)
	given HTMLElement_ondragend					:AttributeAccess[ondragend.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondragend	= _)
	given HTMLElement_onbeforepaste				:AttributeAccess[onbeforepaste.type,		HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.onbeforepaste	= _)
	given HTMLElement_ondragover				:AttributeAccess[ondragover.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondragover	= _)
	given HTMLElement_onmouseup					:AttributeAccess[onmouseup.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmouseup	= _)
	given HTMLElement_ondragstart				:AttributeAccess[ondragstart.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondragstart	= _)
	given HTMLElement_onbeforecopy				:AttributeAccess[onbeforecopy.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.onbeforecopy	= _)
	given HTMLElement_ondrag					:AttributeAccess[ondrag.type,				HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondrag	= _)
	given HTMLElement_onmouseover				:AttributeAccess[onmouseover.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmouseover	= _)
	given HTMLElement_onpause					:AttributeAccess[onpause.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onpause	= _)
	given HTMLElement_onmousedown				:AttributeAccess[onmousedown.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmousedown	= _)
	given HTMLElement_onclick					:AttributeAccess[onclick.type,				HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onclick	= _)
	given HTMLElement_onwaiting					:AttributeAccess[onwaiting.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onwaiting	= _)
	given HTMLElement_onstalled					:AttributeAccess[onstalled.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onstalled	= _)
	given HTMLElement_onmousemove				:AttributeAccess[onmousemove.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmousemove	= _)
	given HTMLElement_onratechange				:AttributeAccess[onratechange.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onratechange	= _)
	given HTMLElement_contentEditable			:AttributeAccess[contentEditable.type,		HTMLElement,			String]									= AttributeAccess(_.contentEditable	= _)
	given HTMLElement_tabIndex					:AttributeAccess[tabIndex.type,				HTMLElement,			Int]									= AttributeAccess(_.tabIndex	= _)
	given HTMLElement_onprogress				:AttributeAccess[onprogress.type,			HTMLElement,			js.Function1[js.Any, ?]]				= AttributeAccess(_.onprogress	= _)
	given HTMLElement_ondblclick				:AttributeAccess[ondblclick.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.ondblclick	= _)
	given HTMLElement_oncontextmenu				:AttributeAccess[oncontextmenu.type,		HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.oncontextmenu	= _)
	given HTMLElement_onloadedmetadata			:AttributeAccess[onloadedmetadata.type,		HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onloadedmetadata	= _)
	given HTMLElement_onplay					:AttributeAccess[onplay.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onplay	= _)
	given HTMLElement_onplaying					:AttributeAccess[onplaying.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onplaying	= _)
	given HTMLElement_onfocusout				:AttributeAccess[onfocusout.type,			HTMLElement,			js.Function1[FocusEvent, ?]]			= AttributeAccess(_.onfocusout	= _)
	given HTMLElement_onabort					:AttributeAccess[onabort.type,				HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onabort	= _)
	given HTMLElement_onreadystatechange		:AttributeAccess[onreadystatechange.type,	HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onreadystatechange	= _)
	given HTMLElement_onkeypress				:AttributeAccess[onkeypress.type,			HTMLElement,			js.Function1[KeyboardEvent, ?]]			= AttributeAccess(_.onkeypress	= _)
	given HTMLElement_onloadeddata				:AttributeAccess[onloadeddata.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onloadeddata	= _)
	given HTMLElement_onbeforedeactivate		:AttributeAccess[onbeforedeactivate.type,	HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onbeforedeactivate	= _)
	given HTMLElement_onactivate				:AttributeAccess[onactivate.type,			HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onactivate	= _)
	given HTMLElement_onselectstart				:AttributeAccess[onselectstart.type,		HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onselectstart	= _)
	given HTMLElement_ontimeupdate				:AttributeAccess[ontimeupdate.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.ontimeupdate	= _)
	given HTMLElement_onselect					:AttributeAccess[onselect.type,				HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onselect	= _)
	given HTMLElement_ondrop					:AttributeAccess[ondrop.type,				HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondrop	= _)
	given HTMLElement_onended					:AttributeAccess[onended.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onended	= _)
	given HTMLElement_onscroll					:AttributeAccess[onscroll.type,				HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onscroll	= _)
	given HTMLElement_oninput					:AttributeAccess[oninput.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.oninput	= _)
	given HTMLElement_oncuechange				:AttributeAccess[oncuechange.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.oncuechange	= _)
	given HTMLElement_spellcheck				:AttributeAccess[spellcheck.type,			HTMLElement,			Boolean]								= AttributeAccess(_.spellcheck	= _)
	given HTMLElement_draggable					:AttributeAccess[draggable.type,			HTMLElement,			Boolean]								= AttributeAccess(_.draggable	= _)
	given HTMLElement_onpointerover				:AttributeAccess[onpointerover.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerover	= _)
	given HTMLElement_onpointerenter			:AttributeAccess[onpointerenter.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerenter	= _)
	given HTMLElement_onpointerdown				:AttributeAccess[onpointerdown.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerdown	= _)
	given HTMLElement_onpointermove				:AttributeAccess[onpointermove.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointermove	= _)
	given HTMLElement_onpointerup				:AttributeAccess[onpointerup.type,			HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerup	= _)
	given HTMLElement_onpointercancel			:AttributeAccess[onpointercancel.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointercancel	= _)
	given HTMLElement_onpointerout				:AttributeAccess[onpointerout.type		,	HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerout	= _)
	given HTMLElement_onpointerleave			:AttributeAccess[onpointerleave.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerleave	= _)
	given HTMLElement_gotpointercapture			:AttributeAccess[gotpointercapture.type,	HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.gotpointercapture	= _)
	given HTMLElement_lostpointercapture		:AttributeAccess[lostpointercapture.type,	HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.lostpointercapture	= _)

	given HTMLObjectElement_width				:AttributeAccess[width.type,				HTMLObjectElement,		String]									= AttributeAccess(_.width	= _)
	// TODO check
	//given HTMLObjectElement_object: Object = js.native
	given HTMLObjectElement_alt					:AttributeAccess[alt.type,					HTMLObjectElement,		String]									= AttributeAccess(_.alt	= _)
	given HTMLObjectElement_classid				:AttributeAccess[classid.type,				HTMLObjectElement,		String]									= AttributeAccess(_.classid	= _)
	given HTMLObjectElement_name				:AttributeAccess[name.type,					HTMLObjectElement,		String]									= AttributeAccess(_.name	= _)
	given HTMLObjectElement_useMap				:AttributeAccess[useMap.type,				HTMLObjectElement,		String]									= AttributeAccess(_.useMap	= _)
	given HTMLObjectElement_data				:AttributeAccess[data.type,					HTMLObjectElement,		String]									= AttributeAccess(_.data	= _)
	given HTMLObjectElement_height				:AttributeAccess[height.type,				HTMLObjectElement,		String]									= AttributeAccess(_.height	= _)
	given HTMLObjectElement_altHtml				:AttributeAccess[altHtml.type,				HTMLObjectElement,		String]									= AttributeAccess(_.altHtml	= _)
	given HTMLObjectElement_type				:AttributeAccess[`type`.type,				HTMLObjectElement,		String]									= AttributeAccess(_.`type`	= _)
	given HTMLObjectElement_BaseHref			:AttributeAccess[BaseHref.type,				HTMLObjectElement,		String]									= AttributeAccess(_.BaseHref	= _)

	given HTMLEmbedElement_width				:AttributeAccess[width.type,				HTMLEmbedElement,		String]									= AttributeAccess(_.width	= _)
	given HTMLEmbedElement_src					:AttributeAccess[src.type,					HTMLEmbedElement,		String]									= AttributeAccess(_.src	= _)
	given HTMLEmbedElement_height				:AttributeAccess[height.type,				HTMLEmbedElement,		String]									= AttributeAccess(_.height	= _)

	given HTMLOptGroupElement_label				:AttributeAccess[labelAttr.type,			HTMLOptGroupElement,	String]									= AttributeAccess(_.label	= _)
	given HTMLOptGroupElement_disabled			:AttributeAccess[disabled.type,				HTMLOptGroupElement,	Boolean]								= AttributeAccess(_.disabled	= _)

	given HTMLVideoElement_width				:AttributeAccess[width.type,				HTMLVideoElement,		Int]									= AttributeAccess(_.width	= _)
	given HTMLVideoElement_height				:AttributeAccess[height.type,				HTMLVideoElement,		Int]									= AttributeAccess(_.height	= _)
	given HTMLVideoElement_poster				:AttributeAccess[poster.type,				HTMLVideoElement,		String]									= AttributeAccess(_.poster	= _)

	given HTMLProgressElement_value				:AttributeAccess[value.type,				HTMLProgressElement,	Double]									= AttributeAccess(_.value	= _)
	given HTMLProgressElement_max				:AttributeAccess[max.type,					HTMLProgressElement,	Double]									= AttributeAccess(_.max	= _)
	given HTMLProgressElement_form				:AttributeAccess[formAttr.type,				HTMLProgressElement,	HTMLFormElement]						= AttributeAccess(_.form	= _)

	given HTMLTrackElement_kind					:AttributeAccess[kind.type,					HTMLTrackElement,		String]									= AttributeAccess(_.kind	= _)
	given HTMLTrackElement_src					:AttributeAccess[src.type,					HTMLTrackElement,		String]									= AttributeAccess(_.src	= _)
	given HTMLTrackElement_srclang				:AttributeAccess[srclang.type,				HTMLTrackElement,		String]									= AttributeAccess(_.srclang	= _)
	given HTMLTrackElement_label				:AttributeAccess[labelAttr.type,			HTMLTrackElement,		String]									= AttributeAccess(_.label	= _)

	given HTMLFormElement_target				:AttributeAccess[target.type,				HTMLFormElement,		String]									= AttributeAccess(_.target	= _)
	given HTMLFormElement_acceptCharset			:AttributeAccess[acceptCharset.type,		HTMLFormElement,		String]									= AttributeAccess(_.acceptCharset	= _)
	given HTMLFormElement_enctype				:AttributeAccess[enctype.type,				HTMLFormElement,		String]									= AttributeAccess(_.enctype	= _)
	given HTMLFormElement_action				:AttributeAccess[action.type,				HTMLFormElement,		String]									= AttributeAccess(_.action	= _)
	given HTMLFormElement_name					:AttributeAccess[name.type,					HTMLFormElement,		String]									= AttributeAccess(_.name	= _)
	given HTMLFormElement_method				:AttributeAccess[method.type,				HTMLFormElement,		String]									= AttributeAccess(_.method	= _)
	given HTMLFormElement_encoding				:AttributeAccess[encoding.type,				HTMLFormElement,		String]									= AttributeAccess(_.encoding	= _)
	given HTMLFormElement_autocomplete			:AttributeAccess[autocomplete.type,			HTMLFormElement,		String]									= AttributeAccess(_.autocomplete	= _)
	given HTMLFormElement_noValidate			:AttributeAccess[noValidate.type,			HTMLFormElement,		Boolean]								= AttributeAccess(_.noValidate	= _)
}
