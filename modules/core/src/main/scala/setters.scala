package sjs.diffless

import scala.scalajs.js
import org.scalajs.dom.raw._

object setters extends setters

/** AttributeAccess instances for each tag/attribute combination possible */
trait setters extends attributes {
	implicit val Element_scrollTop						:AttributeAccess[scrollTop.type,			Element,				Double]									= AttributeAccess(_.scrollTop	= _)
	implicit val Element_scrollLeft						:AttributeAccess[scrollLeft.type,			Element,				Double]									= AttributeAccess(_.scrollLeft	= _)
	implicit val Element_outerHTML						:AttributeAccess[outerHTML.type,			Element,				String]									= AttributeAccess(_.outerHTML	= _)
	implicit val Element_innerHTML						:AttributeAccess[innerHTML.type,			Element,				String]									= AttributeAccess(_.innerHTML	= _)
	implicit val Element_id								:AttributeAccess[id.type,					Element,				String]									= AttributeAccess(_.id	= _)
	implicit val Element_oncopy							:AttributeAccess[oncopy.type,				Element,				js.Function1[ClipboardEvent, ?]]		= AttributeAccess(_.oncopy	= _)
	implicit val Element_oncut							:AttributeAccess[oncut.type,				Element,				js.Function1[ClipboardEvent, ?]]		= AttributeAccess(_.oncut	= _)
	implicit val Element_onpaste						:AttributeAccess[onpaste.type,				Element,				js.Function1[ClipboardEvent, ?]]		= AttributeAccess(_.onpaste	= _)
	implicit val Element_accessKey						:AttributeAccess[accessKey.type,			Element,				String]									= AttributeAccess(_.accessKey	= _)
	implicit val Element_classList						:AttributeAccess[classList.type,			Element,				DOMTokenList]							= AttributeAccess(_.classList	= _)

	implicit val HTMLBaseElement_target					:AttributeAccess[target.type,				HTMLBaseElement,		String]									= AttributeAccess(_.target	= _)
	implicit val HTMLBaseElement_href					:AttributeAccess[href.type,					HTMLBaseElement,		String]									= AttributeAccess(_.href	= _)

	implicit val HTMLOListElement_start					:AttributeAccess[start.type,				HTMLOListElement,		Int]									= AttributeAccess(_.start	= _)

	implicit val HTMLSelectElement_value				:AttributeAccess[value.type,				HTMLSelectElement,		String]									= AttributeAccess(_.value	= _)
	implicit val HTMLSelectElement_name					:AttributeAccess[name.type,					HTMLSelectElement,		String]									= AttributeAccess(_.name	= _)
	implicit val HTMLSelectElement_size					:AttributeAccess[size.type,					HTMLSelectElement,		Int]									= AttributeAccess(_.size	= _)
	implicit val HTMLSelectElement_selectedIndex		:AttributeAccess[selectedIndex.type,		HTMLSelectElement,		Int]									= AttributeAccess(_.selectedIndex	= _)
	implicit val HTMLSelectElement_multiple				:AttributeAccess[multiple.type,				HTMLSelectElement,		Boolean]								= AttributeAccess(_.multiple	= _)
	implicit val HTMLSelectElement_disabled				:AttributeAccess[disabled.type,				HTMLSelectElement,		Boolean]								= AttributeAccess(_.disabled	= _)
	implicit val HTMLSelectElement_autofocus			:AttributeAccess[autofocus.type,			HTMLSelectElement,		Boolean]								= AttributeAccess(_.autofocus	= _)
	implicit val HTMLSelectElement_required				:AttributeAccess[required.type,				HTMLSelectElement,		Boolean]								= AttributeAccess(_.required	= _)

	// NOTE gone since scala-js-dom 1.0.0
	//implicit val HTMLBlockElement_width					:AttributeAccess[width.type,				HTMLBlockElement,		Double]									= AttributeAccess(_.width	= _)
	//implicit val HTMLBlockElement_cite					:AttributeAccess[citeAttr.type,			HTMLBlockElement,		String]									= AttributeAccess(_.cite	= _)

	implicit val HTMLMetaElement_httpEquiv				:AttributeAccess[httpEquiv.type,			HTMLMetaElement,		String]									= AttributeAccess(_.httpEquiv	= _)
	implicit val HTMLMetaElement_name					:AttributeAccess[name.type,					HTMLMetaElement,		String]									= AttributeAccess(_.name	= _)
	implicit val HTMLMetaElement_content				:AttributeAccess[content.type,				HTMLMetaElement,		String]									= AttributeAccess(_.content	= _)
	implicit val HTMLMetaElement_url					:AttributeAccess[url.type,					HTMLMetaElement,		String]									= AttributeAccess(_.url	= _)
	implicit val HTMLMetaElement_charset				:AttributeAccess[charset.type,				HTMLMetaElement,		String]									= AttributeAccess(_.charset	= _)

	// NOTE gone since scala-js-dom 1.0.0
	//implicit val HTMLDDElement_noWrap					:AttributeAccess[noWrap.type,				HTMLDDElement,			Boolean]								= AttributeAccess(_.noWrap	= _)

	implicit val HTMLLinkElement_rel					:AttributeAccess[rel.type,					HTMLLinkElement,		String]									= AttributeAccess(_.rel	= _)
	implicit val HTMLLinkElement_target					:AttributeAccess[target.type,				HTMLLinkElement,		String]									= AttributeAccess(_.target	= _)
	implicit val HTMLLinkElement_href					:AttributeAccess[href.type,					HTMLLinkElement,		String]									= AttributeAccess(_.href	= _)
	implicit val HTMLLinkElement_media					:AttributeAccess[media.type,				HTMLLinkElement,		String]									= AttributeAccess(_.media	= _)
	implicit val HTMLLinkElement_rev					:AttributeAccess[rev.type,					HTMLLinkElement,		String]									= AttributeAccess(_.rev	= _)
	implicit val HTMLLinkElement_type					:AttributeAccess[`type`.type,				HTMLLinkElement,		String]									= AttributeAccess(_.`type`	= _)
	implicit val HTMLLinkElement_hreflang				:AttributeAccess[hreflang.type,				HTMLLinkElement,		String]									= AttributeAccess(_.hreflang	= _)

	implicit val HTMLOptionElement_defaultSelected		:AttributeAccess[defaultSelected.type,		HTMLOptionElement,		Boolean]								= AttributeAccess(_.defaultSelected	= _)
	implicit val HTMLOptionElement_value				:AttributeAccess[value.type,				HTMLOptionElement,		String]									= AttributeAccess(_.value	= _)
	implicit val HTMLOptionElement_text					:AttributeAccess[textAttr.type,				HTMLOptionElement,		String]									= AttributeAccess(_.text	= _)
	implicit val HTMLOptionElement_label				:AttributeAccess[labelAttr.type,			HTMLOptionElement,		String]									= AttributeAccess(_.label	= _)
	implicit val HTMLOptionElement_selected				:AttributeAccess[selected.type,				HTMLOptionElement,		Boolean]								= AttributeAccess(_.selected	= _)
	implicit val HTMLOptionElement_disabled				:AttributeAccess[disabled.type,				HTMLOptionElement,		Boolean]								= AttributeAccess(_.disabled	= _)

	implicit val HTMLMapElement_name					:AttributeAccess[name.type,					HTMLMapElement,			String]									= AttributeAccess(_.name	= _)

	implicit val HTMLMenuElement_type					:AttributeAccess[`type`.type,				HTMLMenuElement,		String]									= AttributeAccess(_.`type`	= _)

	implicit val HTMLImageElement_width					:AttributeAccess[width.type,				HTMLImageElement,		Int]									= AttributeAccess(_.width	= _)
	implicit val HTMLImageElement_naturalHeight			:AttributeAccess[naturalHeight.type,		HTMLImageElement,		Int]									= AttributeAccess(_.naturalHeight	= _)
	implicit val HTMLImageElement_alt					:AttributeAccess[alt.type,					HTMLImageElement,		String]									= AttributeAccess(_.alt	= _)
	implicit val HTMLImageElement_src					:AttributeAccess[src.type,					HTMLImageElement,		String]									= AttributeAccess(_.src	= _)
	implicit val HTMLImageElement_useMap				:AttributeAccess[useMap.type,				HTMLImageElement,		String]									= AttributeAccess(_.useMap	= _)
	implicit val HTMLImageElement_naturalWidth			:AttributeAccess[naturalWidth.type,			HTMLImageElement,		Int]									= AttributeAccess(_.naturalWidth	= _)
	implicit val HTMLImageElement_height				:AttributeAccess[height.type,				HTMLImageElement,		Int]									= AttributeAccess(_.height	= _)
	implicit val HTMLImageElement_href					:AttributeAccess[href.type,					HTMLImageElement,		String]									= AttributeAccess(_.href	= _)
	implicit val HTMLImageElement_isMap					:AttributeAccess[isMap.type,				HTMLImageElement,		Boolean]								= AttributeAccess(_.isMap	= _)
	implicit val HTMLImageElement_onload				:AttributeAccess[onload.type,				HTMLImageElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onload	= _)

	implicit val HTMLAreaElement_protocol				:AttributeAccess[protocol.type,				HTMLAreaElement,		String]									= AttributeAccess(_.protocol	= _)
	implicit val HTMLAreaElement_search					:AttributeAccess[search.type,				HTMLAreaElement,		String]									= AttributeAccess(_.search	= _)
	implicit val HTMLAreaElement_alt					:AttributeAccess[alt.type,					HTMLAreaElement,		String]									= AttributeAccess(_.alt	= _)
	implicit val HTMLAreaElement_coords					:AttributeAccess[coords.type,				HTMLAreaElement,		String]									= AttributeAccess(_.coords	= _)
	implicit val HTMLAreaElement_hostname				:AttributeAccess[hostname.type,				HTMLAreaElement,		String]									= AttributeAccess(_.hostname	= _)
	implicit val HTMLAreaElement_port					:AttributeAccess[port.type,					HTMLAreaElement,		String]									= AttributeAccess(_.port	= _)
	implicit val HTMLAreaElement_pathname				:AttributeAccess[pathname.type,				HTMLAreaElement,		String]									= AttributeAccess(_.pathname	= _)
	implicit val HTMLAreaElement_host					:AttributeAccess[host.type,					HTMLAreaElement,		String]									= AttributeAccess(_.host	= _)
	implicit val HTMLAreaElement_hash					:AttributeAccess[hash.type,					HTMLAreaElement,		String]									= AttributeAccess(_.hash	= _)
	implicit val HTMLAreaElement_target					:AttributeAccess[target.type,				HTMLAreaElement,		String]									= AttributeAccess(_.target	= _)
	implicit val HTMLAreaElement_href					:AttributeAccess[href.type,					HTMLAreaElement,		String]									= AttributeAccess(_.href	= _)
	implicit val HTMLAreaElement_shape					:AttributeAccess[shape.type,				HTMLAreaElement,		String]									= AttributeAccess(_.shape	= _)

	implicit val HTMLButtonElement_value				:AttributeAccess[value.type,				HTMLButtonElement,		String]									= AttributeAccess(_.value	= _)
	implicit val HTMLButtonElement_status				:AttributeAccess[status.type,				HTMLButtonElement,		js.Any]									= AttributeAccess(_.status	= _)
	implicit val HTMLButtonElement_name					:AttributeAccess[name.type,					HTMLButtonElement,		String]									= AttributeAccess(_.name	= _)
	implicit val HTMLButtonElement_type					:AttributeAccess[`type`.type,				HTMLButtonElement,		String]									= AttributeAccess(_.`type`	= _)
	implicit val HTMLButtonElement_disabled				:AttributeAccess[disabled.type,				HTMLButtonElement,		Boolean]								= AttributeAccess(_.disabled	= _)
	implicit val HTMLButtonElement_formTarget			:AttributeAccess[formTarget.type,			HTMLButtonElement,		String]									= AttributeAccess(_.formTarget	= _)
	implicit val HTMLButtonElement_formAction			:AttributeAccess[formAction.type,			HTMLButtonElement,		String]									= AttributeAccess(_.formAction	= _)
	implicit val HTMLButtonElement_autofocus			:AttributeAccess[autofocus.type,			HTMLButtonElement,		Boolean]								= AttributeAccess(_.autofocus	= _)
	implicit val HTMLButtonElement_formNoValidate		:AttributeAccess[formNoValidate.type,		HTMLButtonElement,		String]									= AttributeAccess(_.formNoValidate	= _)
	implicit val HTMLButtonElement_formEnctype			:AttributeAccess[formEnctype.type,			HTMLButtonElement,		String]									= AttributeAccess(_.formEnctype	= _)
	implicit val HTMLButtonElement_formMethod			:AttributeAccess[formMethod.type,			HTMLButtonElement,		String]									= AttributeAccess(_.formMethod	= _)

	implicit val HTMLSourceElement_src					:AttributeAccess[src.type,					HTMLSourceElement,		String]									= AttributeAccess(_.src	= _)
	implicit val HTMLSourceElement_media				:AttributeAccess[media.type,				HTMLSourceElement,		String]									= AttributeAccess(_.media	= _)
	implicit val HTMLSourceElement_type					:AttributeAccess[`type`.type,				HTMLSourceElement,		String]									= AttributeAccess(_.`type`	= _)

	implicit val HTMLScriptElement_defer				:AttributeAccess[defer.type,				HTMLScriptElement,		Boolean]								= AttributeAccess(_.defer	= _)
	implicit val HTMLScriptElement_text					:AttributeAccess[textAttr.type,				HTMLScriptElement,		String]									= AttributeAccess(_.text	= _)
	implicit val HTMLScriptElement_src					:AttributeAccess[src.type,					HTMLScriptElement,		String]									= AttributeAccess(_.src	= _)
	implicit val HTMLScriptElement_charset				:AttributeAccess[charset.type,				HTMLScriptElement,		String]									= AttributeAccess(_.charset	= _)
	implicit val HTMLScriptElement_type					:AttributeAccess[`type`.type,				HTMLScriptElement,		String]									= AttributeAccess(_.`type`	= _)
	implicit val HTMLScriptElement_event				:AttributeAccess[event.type,				HTMLScriptElement,		String]									= AttributeAccess(_.event	= _)
	implicit val HTMLScriptElement_async				:AttributeAccess[async.type,				HTMLScriptElement,		Boolean]								= AttributeAccess(_.async	= _)
	implicit val HTMLScriptElement_onload				:AttributeAccess[onload.type,				HTMLScriptElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onload	= _)

	implicit val HTMLTableRowElement_borderColorLight	:AttributeAccess[borderColorLight.type,		HTMLTableRowElement,	js.Any]									= AttributeAccess(_.borderColorLight	= _)
	implicit val HTMLTableRowElement_borderColor		:AttributeAccess[borderColor.type,			HTMLTableRowElement,	js.Any]									= AttributeAccess(_.borderColor	= _)
	implicit val HTMLTableRowElement_height				:AttributeAccess[height.type,				HTMLTableRowElement,	js.Any]									= AttributeAccess(_.height	= _)
	implicit val HTMLTableRowElement_borderColorDark	:AttributeAccess[borderColorDark.type,		HTMLTableRowElement,	js.Any]									= AttributeAccess(_.borderColorDark	= _)

	implicit val HTMLQuoteElement_dateTime				:AttributeAccess[dateTime.type,				HTMLQuoteElement,		String]									= AttributeAccess(_.dateTime	= _)
	implicit val HTMLQuoteElement_cite					:AttributeAccess[citeAttr.type,				HTMLQuoteElement,		String]									= AttributeAccess(_.cite	= _)

	implicit val HTMLLabelElement_htmlFor				:AttributeAccess[htmlFor.type,				HTMLLabelElement,		String]									= AttributeAccess(_.htmlFor	= _)

	implicit val HTMLLegendElement_align				:AttributeAccess[align.type,				HTMLLegendElement,		String]									= AttributeAccess(_.align	= _)

	implicit val HTMLLIElement_value					:AttributeAccess[value.type,				HTMLLIElement,			Int]									= AttributeAccess(_.value	= _)

	implicit val HTMLIFrameElement_width				:AttributeAccess[width.type,				HTMLIFrameElement,		String]									= AttributeAccess(_.width	= _)
	implicit val HTMLIFrameElement_src					:AttributeAccess[src.type,					HTMLIFrameElement,		String]									= AttributeAccess(_.src	= _)
	implicit val HTMLIFrameElement_name					:AttributeAccess[name.type,					HTMLIFrameElement,		String]									= AttributeAccess(_.name	= _)
	implicit val HTMLIFrameElement_height				:AttributeAccess[height.type,				HTMLIFrameElement,		String]									= AttributeAccess(_.height	= _)
	implicit val HTMLIFrameElement_border				:AttributeAccess[border.type,				HTMLIFrameElement,		String]									= AttributeAccess(_.border	= _)
	implicit val HTMLIFrameElement_security				:AttributeAccess[security.type,				HTMLIFrameElement,		js.Any]									= AttributeAccess(_.security	= _)
	implicit val HTMLIFrameElement_onload				:AttributeAccess[onload.type,				HTMLIFrameElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onload	= _)
	implicit val HTMLIFrameElement_sandbox				:AttributeAccess[sandbox.type,				HTMLIFrameElement,		DOMSettableTokenList]					= AttributeAccess(_.sandbox	= _)

	implicit val HTMLBodyElement_scroll					:AttributeAccess[scroll.type,				HTMLBodyElement,		String]									= AttributeAccess(_.scroll	= _)
	implicit val HTMLBodyElement_ononline				:AttributeAccess[ononline.type,				HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.ononline	= _)
	implicit val HTMLBodyElement_onmessage				:AttributeAccess[onmessage.type,			HTMLBodyElement,		js.Function1[MessageEvent, ?]]			= AttributeAccess(_.onmessage	= _)
	implicit val HTMLBodyElement_onerror				:AttributeAccess[onerror.type,				HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onerror	= _)
	implicit val HTMLBodyElement_onresize				:AttributeAccess[onresize.type,				HTMLBodyElement,		js.Function1[UIEvent, ?]]				= AttributeAccess(_.onresize	= _)
	implicit val HTMLBodyElement_onafterprint			:AttributeAccess[onafterprint.type,			HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onafterprint	= _)
	implicit val HTMLBodyElement_onbeforeprint			:AttributeAccess[onbeforeprint.type,		HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onbeforeprint	= _)
	implicit val HTMLBodyElement_onoffline				:AttributeAccess[onoffline.type,			HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onoffline	= _)
	implicit val HTMLBodyElement_onunload				:AttributeAccess[onunload.type,				HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onunload	= _)
	implicit val HTMLBodyElement_onhashchange			:AttributeAccess[onhashchange.type,			HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onhashchange	= _)
	implicit val HTMLBodyElement_onload					:AttributeAccess[onload.type,				HTMLBodyElement,		js.Function1[Event, ?]]					= AttributeAccess(_.onload	= _)
	implicit val HTMLBodyElement_onbeforeunload			:AttributeAccess[onbeforeunload.type,		HTMLBodyElement,		js.Function1[BeforeUnloadEvent, ?]]		= AttributeAccess(_.onbeforeunload	= _)
	implicit val HTMLBodyElement_onstorage				:AttributeAccess[onstorage.type,			HTMLBodyElement,		js.Function1[StorageEvent, ?]]			= AttributeAccess(_.onstorage	= _)
	implicit val HTMLBodyElement_onpopstate				:AttributeAccess[onpopstate.type,			HTMLBodyElement,		js.Function1[PopStateEvent, ?]]			= AttributeAccess(_.onpopstate	= _)

	implicit val HTMLInputElement_width					:AttributeAccess[width.type,				HTMLInputElement,		String]									= AttributeAccess(_.width	= _)
	implicit val HTMLInputElement_status				:AttributeAccess[status.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.status	= _)
	implicit val HTMLInputElement_selectionStart		:AttributeAccess[selectionStart.type,		HTMLInputElement,		Int]									= AttributeAccess(_.selectionStart	= _)
	implicit val HTMLInputElement_indeterminate			:AttributeAccess[indeterminate.type,		HTMLInputElement,		Boolean]								= AttributeAccess(_.indeterminate	= _)
	implicit val HTMLInputElement_readOnly				:AttributeAccess[readOnly.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.readOnly	= _)
	implicit val HTMLInputElement_size					:AttributeAccess[size.type,					HTMLInputElement,		Int]									= AttributeAccess(_.size	= _)
	implicit val HTMLInputElement_selectionEnd			:AttributeAccess[selectionEnd.type,			HTMLInputElement,		Int]									= AttributeAccess(_.selectionEnd	= _)
	implicit val HTMLInputElement_accept				:AttributeAccess[accept.type,				HTMLInputElement,		String]									= AttributeAccess(_.accept	= _)
	implicit val HTMLInputElement_alt					:AttributeAccess[alt.type,					HTMLInputElement,		String]									= AttributeAccess(_.alt	= _)
	implicit val HTMLInputElement_defaultChecked		:AttributeAccess[defaultChecked.type,		HTMLInputElement,		Boolean]								= AttributeAccess(_.defaultChecked	= _)
	implicit val HTMLInputElement_value					:AttributeAccess[value.type,				HTMLInputElement,		String]									= AttributeAccess(_.value	= _)
	implicit val HTMLInputElement_src					:AttributeAccess[src.type,					HTMLInputElement,		String]									= AttributeAccess(_.src	= _)
	implicit val HTMLInputElement_name					:AttributeAccess[name.type,					HTMLInputElement,		String]									= AttributeAccess(_.name	= _)
	implicit val HTMLInputElement_height				:AttributeAccess[height.type,				HTMLInputElement,		String]									= AttributeAccess(_.height	= _)
	implicit val HTMLInputElement_checked				:AttributeAccess[checked.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.checked	= _)
	implicit val HTMLInputElement_disabled				:AttributeAccess[disabled.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.disabled	= _)
	implicit val HTMLInputElement_maxLength				:AttributeAccess[maxLength.type,			HTMLInputElement,		Int]									= AttributeAccess(_.maxLength	= _)
	implicit val HTMLInputElement_type					:AttributeAccess[`type`.type,				HTMLInputElement,		String]									= AttributeAccess(_.`type`	= _)
	implicit val HTMLInputElement_defaultValue			:AttributeAccess[defaultValue.type,			HTMLInputElement,		String]									= AttributeAccess(_.defaultValue	= _)
	implicit val HTMLInputElement_files					:AttributeAccess[files.type,				HTMLInputElement,		FileList]								= AttributeAccess(_.files	= _)
	implicit val HTMLInputElement_max					:AttributeAccess[max.type,					HTMLInputElement,		String]									= AttributeAccess(_.max	= _)
	implicit val HTMLInputElement_formTarget			:AttributeAccess[formTarget.type,			HTMLInputElement,		String]									= AttributeAccess(_.formTarget	= _)
	implicit val HTMLInputElement_step					:AttributeAccess[step.type,					HTMLInputElement,		String]									= AttributeAccess(_.step	= _)
	implicit val HTMLInputElement_autofocus				:AttributeAccess[autofocus.type,			HTMLInputElement,		Boolean]								= AttributeAccess(_.autofocus	= _)
	implicit val HTMLInputElement_required				:AttributeAccess[required.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.required	= _)
	implicit val HTMLInputElement_formEnctype			:AttributeAccess[formEnctype.type,			HTMLInputElement,		String]									= AttributeAccess(_.formEnctype	= _)
	implicit val HTMLInputElement_valueAsNumber			:AttributeAccess[valueAsNumber.type,		HTMLInputElement,		Double]									= AttributeAccess(_.valueAsNumber	= _)
	implicit val HTMLInputElement_placeholder			:AttributeAccess[placeholder.type,			HTMLInputElement,		String]									= AttributeAccess(_.placeholder	= _)
	implicit val HTMLInputElement_formMethod			:AttributeAccess[formMethod.type,			HTMLInputElement,		String]									= AttributeAccess(_.formMethod	= _)
	implicit val HTMLInputElement_list					:AttributeAccess[list.type,					HTMLInputElement,		HTMLElement]							= AttributeAccess(_.list	= _)
	implicit val HTMLInputElement_autocomplete			:AttributeAccess[autocomplete.type,			HTMLInputElement,		String]									= AttributeAccess(_.autocomplete	= _)
	implicit val HTMLInputElement_min					:AttributeAccess[min.type,					HTMLInputElement,		String]									= AttributeAccess(_.min	= _)
	implicit val HTMLInputElement_formAction			:AttributeAccess[formAction.type,			HTMLInputElement,		String]									= AttributeAccess(_.formAction	= _)
	implicit val HTMLInputElement_pattern				:AttributeAccess[pattern.type,				HTMLInputElement,		String]									= AttributeAccess(_.pattern	= _)
	implicit val HTMLInputElement_formNoValidate		:AttributeAccess[formNoValidate.type,		HTMLInputElement,		String]									= AttributeAccess(_.formNoValidate	= _)
	implicit val HTMLInputElement_multiple				:AttributeAccess[multiple.type,				HTMLInputElement,		Boolean]								= AttributeAccess(_.multiple	= _)

	implicit val HTMLAnchorElement_rel					:AttributeAccess[rel.type,					HTMLAnchorElement,		String]									= AttributeAccess(_.rel	= _)
	implicit val HTMLAnchorElement_protocol				:AttributeAccess[protocol.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.protocol	= _)
	implicit val HTMLAnchorElement_search				:AttributeAccess[search.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.search	= _)
	implicit val HTMLAnchorElement_hostname				:AttributeAccess[hostname.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.hostname	= _)
	implicit val HTMLAnchorElement_pathname				:AttributeAccess[pathname.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.pathname	= _)
	implicit val HTMLAnchorElement_target				:AttributeAccess[target.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.target	= _)
	implicit val HTMLAnchorElement_href					:AttributeAccess[href.type,					HTMLAnchorElement,		String]									= AttributeAccess(_.href	= _)
	implicit val HTMLAnchorElement_charset				:AttributeAccess[charset.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.charset	= _)
	implicit val HTMLAnchorElement_hreflang				:AttributeAccess[hreflang.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.hreflang	= _)
	implicit val HTMLAnchorElement_port					:AttributeAccess[port.type,					HTMLAnchorElement,		String]									= AttributeAccess(_.port	= _)
	implicit val HTMLAnchorElement_host					:AttributeAccess[host.type,					HTMLAnchorElement,		String]									= AttributeAccess(_.host	= _)
	implicit val HTMLAnchorElement_hash					:AttributeAccess[hash.type,					HTMLAnchorElement,		String]									= AttributeAccess(_.hash	= _)
	implicit val HTMLAnchorElement_type					:AttributeAccess[`type`.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.`type`	= _)
	implicit val HTMLAnchorElement_mimeType				:AttributeAccess[mimeType.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.mimeType	= _)
	implicit val HTMLAnchorElement_text					:AttributeAccess[textAttr.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.text	= _)
	// TODO hack: as download is experimental, it's not in the API as a property yet
	implicit val HTMLAnchorElement_download				:AttributeAccess[download.type,				HTMLAnchorElement,		String]									= AttributeAccess(_.setAttribute ("download", _))


	implicit val HTMLParamElement_value					:AttributeAccess[value.type,				HTMLParamElement,		String]									= AttributeAccess(_.value	= _)
	implicit val HTMLParamElement_name					:AttributeAccess[name.type,					HTMLParamElement,		String]									= AttributeAccess(_.name	= _)

	// NOTE gone since scala-js-dom 1.0.0
	//implicit val HTMLPhraseElement_dateTime				:AttributeAccess[dateTime.type,			HTMLPhraseElement,		String]									= AttributeAccess(_.dateTime	= _)

	implicit val HTMLCanvasElement_width				:AttributeAccess[width.type,				HTMLCanvasElement,		Int]									= AttributeAccess(_.width	= _)
	implicit val HTMLCanvasElement_height				:AttributeAccess[height.type,				HTMLCanvasElement,		Int]									= AttributeAccess(_.height	= _)

	implicit val HTMLTitleElement_text					:AttributeAccess[textAttr.type,				HTMLTitleElement,		String]									= AttributeAccess(_.text	= _)

	implicit val HTMLStyleElement_media					:AttributeAccess[media.type,				HTMLStyleElement,		String]									= AttributeAccess(_.media	= _)
	implicit val HTMLStyleElement_type					:AttributeAccess[`type`.type,				HTMLStyleElement,		String]									= AttributeAccess(_.`type`	= _)

	implicit val HTMLTableCellElement_colSpan			:AttributeAccess[colSpan.type,				HTMLTableCellElement,	Int]									= AttributeAccess(_.colSpan	= _)
	implicit val HTMLTableCellElement_rowSpan			:AttributeAccess[rowSpan.type,				HTMLTableCellElement,	Int]									= AttributeAccess(_.rowSpan	= _)

	implicit val HTMLTextAreaElement_value				:AttributeAccess[value.type,				HTMLTextAreaElement,	String]									= AttributeAccess(_.value	= _)
	implicit val HTMLTextAreaElement_status				:AttributeAccess[status.type,				HTMLTextAreaElement,	js.Any]									= AttributeAccess(_.status	= _)
	implicit val HTMLTextAreaElement_name				:AttributeAccess[name.type,					HTMLTextAreaElement,	String]									= AttributeAccess(_.name	= _)
	implicit val HTMLTextAreaElement_disabled			:AttributeAccess[disabled.type,				HTMLTextAreaElement,	Boolean]								= AttributeAccess(_.disabled	= _)
	implicit val HTMLTextAreaElement_selectionStart		:AttributeAccess[selectionStart.type,		HTMLTextAreaElement,	Int]									= AttributeAccess(_.selectionStart	= _)
	implicit val HTMLTextAreaElement_rows				:AttributeAccess[rows.type,					HTMLTextAreaElement,	Int]									= AttributeAccess(_.rows	= _)
	implicit val HTMLTextAreaElement_cols				:AttributeAccess[cols.type,					HTMLTextAreaElement,	Int]									= AttributeAccess(_.cols	= _)
	implicit val HTMLTextAreaElement_readOnly			:AttributeAccess[readOnly.type,				HTMLTextAreaElement,	Boolean]								= AttributeAccess(_.readOnly	= _)
	implicit val HTMLTextAreaElement_wrap				:AttributeAccess[wrap.type,					HTMLTextAreaElement,	String]									= AttributeAccess(_.wrap	= _)
	implicit val HTMLTextAreaElement_selectionEnd		:AttributeAccess[selectionEnd.type,			HTMLTextAreaElement,	Int]									= AttributeAccess(_.selectionEnd	= _)
	implicit val HTMLTextAreaElement_defaultValue		:AttributeAccess[defaultValue.type,			HTMLTextAreaElement,	String]									= AttributeAccess(_.defaultValue	= _)
	implicit val HTMLTextAreaElement_autofocus			:AttributeAccess[autofocus.type,			HTMLTextAreaElement,	Boolean]								= AttributeAccess(_.autofocus	= _)
	implicit val HTMLTextAreaElement_required			:AttributeAccess[required.type,				HTMLTextAreaElement,	Boolean]								= AttributeAccess(_.required	= _)
	implicit val HTMLTextAreaElement_maxLength			:AttributeAccess[maxLength.type,			HTMLTextAreaElement,	Int]									= AttributeAccess(_.maxLength	= _)
	implicit val HTMLTextAreaElement_placeholder		:AttributeAccess[placeholder.type,			HTMLTextAreaElement,	String]									= AttributeAccess(_.placeholder	= _)

	implicit val HTMLModElement_dateTime				:AttributeAccess[dateTime.type,				HTMLModElement,			String]									= AttributeAccess(_.dateTime	= _)
	implicit val HTMLModElement_cite					:AttributeAccess[citeAttr.type,				HTMLModElement,			String]									= AttributeAccess(_.cite	= _)

	implicit val HTMLTableColElement_span				:AttributeAccess[spanAttr.type,				HTMLTableColElement,	Int]									= AttributeAccess(_.span	= _)

	implicit val HTMLMediaElement_loop					:AttributeAccess[loop.type,					HTMLMediaElement,		Boolean]								= AttributeAccess(_.loop	= _)
	implicit val HTMLMediaElement_autoplay				:AttributeAccess[autoplay.type,				HTMLMediaElement,		Boolean]								= AttributeAccess(_.autoplay	= _)
	implicit val HTMLMediaElement_controls				:AttributeAccess[controls.type,				HTMLMediaElement,		Boolean]								= AttributeAccess(_.controls	= _)
	implicit val HTMLMediaElement_volume				:AttributeAccess[volume.type,				HTMLMediaElement,		Double]									= AttributeAccess(_.volume	= _)
	implicit val HTMLMediaElement_src					:AttributeAccess[src.type,					HTMLMediaElement,		String]									= AttributeAccess(_.src	= _)
	implicit val HTMLMediaElement_playbackRate			:AttributeAccess[playbackRate.type,			HTMLMediaElement,		Double]									= AttributeAccess(_.playbackRate	= _)
	implicit val HTMLMediaElement_muted					:AttributeAccess[muted.type,				HTMLMediaElement,		Boolean]								= AttributeAccess(_.muted	= _)
	implicit val HTMLMediaElement_defaultPlaybackRate	:AttributeAccess[defaultPlaybackRate.type,	HTMLMediaElement,		Double]									= AttributeAccess(_.defaultPlaybackRate	= _)
	implicit val HTMLMediaElement_currentTime			:AttributeAccess[currentTime.type,			HTMLMediaElement,		Double]									= AttributeAccess(_.currentTime	= _)
	implicit val HTMLMediaElement_preload				:AttributeAccess[preload.type,				HTMLMediaElement,		String]									= AttributeAccess(_.preload	= _)

	// NOTE gone since scala-js-dom 1.0.0
	//implicit val HTMLDTElement_noWrap					:AttributeAccess[noWrap.type,				HTMLDTElement,			Boolean]								= AttributeAccess(_.noWrap	= _)

	implicit val HTMLFieldSetElement_disabled			:AttributeAccess[disabled.type,				HTMLFieldSetElement,	Boolean]								= AttributeAccess(_.disabled	= _)

	implicit val HTMLElement_onblur						:AttributeAccess[onblur.type,				HTMLElement,			js.Function1[FocusEvent, ?]]			= AttributeAccess(_.onblur	= _)
	implicit val HTMLElement_onfocus					:AttributeAccess[onfocus.type,				HTMLElement,			js.Function1[FocusEvent, ?]]			= AttributeAccess(_.onfocus	= _)
	implicit val HTMLElement_onmouseleave				:AttributeAccess[onmouseleave.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmouseleave	= _)
	implicit val HTMLElement_onbeforecut				:AttributeAccess[onbeforecut.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.onbeforecut	= _)
	implicit val HTMLElement_onkeydown					:AttributeAccess[onkeydown.type,			HTMLElement,			js.Function1[KeyboardEvent, ?]]			= AttributeAccess(_.onkeydown	= _)
	implicit val HTMLElement_onkeyup					:AttributeAccess[onkeyup.type,				HTMLElement,			js.Function1[KeyboardEvent, ?]]			= AttributeAccess(_.onkeyup	= _)
	implicit val HTMLElement_onreset					:AttributeAccess[onreset.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onreset	= _)
	implicit val HTMLElement_onhelp						:AttributeAccess[onhelp.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onhelp	= _)
	implicit val HTMLElement_ondragleave				:AttributeAccess[ondragleave.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondragleave	= _)
	implicit val HTMLElement_className					:AttributeAccess[className.type,			HTMLElement,			String]									= AttributeAccess(_.className	= _)
	implicit val HTMLElement_onfocusin					:AttributeAccess[onfocusin.type,			HTMLElement,			js.Function1[FocusEvent, ?]]			= AttributeAccess(_.onfocusin	= _)
	implicit val HTMLElement_onseeked					:AttributeAccess[onseeked.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onseeked	= _)
	implicit val HTMLElement_recordNumber				:AttributeAccess[recordNumber.type,			HTMLElement,			js.Any]									= AttributeAccess(_.recordNumber	= _)
	implicit val HTMLElement_title						:AttributeAccess[titleAttr.type,			HTMLElement,			String]									= AttributeAccess(_.title	= _)
	implicit val HTMLElement_ondurationchange			:AttributeAccess[ondurationchange.type,		HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.ondurationchange	= _)
	implicit val HTMLElement_dir						:AttributeAccess[dir.type,					HTMLElement,			String]									= AttributeAccess(_.dir	= _)
	implicit val HTMLElement_onemptied					:AttributeAccess[onemptied.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onemptied	= _)
	implicit val HTMLElement_onseeking					:AttributeAccess[onseeking.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onseeking	= _)
	implicit val HTMLElement_oncanplay					:AttributeAccess[oncanplay.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.oncanplay	= _)
	implicit val HTMLElement_ondeactivate				:AttributeAccess[ondeactivate.type,			HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.ondeactivate	= _)
	implicit val HTMLElement_onloadstart				:AttributeAccess[onloadstart.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onloadstart	= _)
	implicit val HTMLElement_ondragenter				:AttributeAccess[ondragenter.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondragenter	= _)
	implicit val HTMLElement_onsubmit					:AttributeAccess[onsubmit.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onsubmit	= _)
	implicit val HTMLElement_onchange					:AttributeAccess[onchange.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onchange	= _)
	implicit val HTMLElement_onbeforeactivate			:AttributeAccess[onbeforeactivate.type,		HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onbeforeactivate	= _)
	implicit val HTMLElement_oncanplaythrough			:AttributeAccess[oncanplaythrough.type,		HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.oncanplaythrough	= _)
	implicit val HTMLElement_onsuspend					:AttributeAccess[onsuspend.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onsuspend	= _)
	implicit val HTMLElement_readyState					:AttributeAccess[readyState.type,			HTMLElement,			js.Any]									= AttributeAccess(_.readyState	= _)
	implicit val HTMLElement_onmouseenter				:AttributeAccess[onmouseenter.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmouseenter	= _)
	implicit val HTMLElement_onmouseout					:AttributeAccess[onmouseout.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmouseout	= _)
	implicit val HTMLElement_parentElement				:AttributeAccess[parentElement.type,		HTMLElement,			HTMLElement]							= AttributeAccess(_.parentElement	= _)
	implicit val HTMLElement_onmousewheel				:AttributeAccess[onmousewheel.type,			HTMLElement,			js.Function1[WheelEvent, ?]]			= AttributeAccess(_.onmousewheel	= _)
	implicit val HTMLElement_onvolumechange				:AttributeAccess[onvolumechange.type,		HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onvolumechange	= _)
	implicit val HTMLElement_filters					:AttributeAccess[filters.type,				HTMLElement,			Object]									= AttributeAccess(_.filters	= _)
	implicit val HTMLElement_ondragend					:AttributeAccess[ondragend.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondragend	= _)
	implicit val HTMLElement_onbeforepaste				:AttributeAccess[onbeforepaste.type,		HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.onbeforepaste	= _)
	implicit val HTMLElement_ondragover					:AttributeAccess[ondragover.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondragover	= _)
	implicit val HTMLElement_onmouseup					:AttributeAccess[onmouseup.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmouseup	= _)
	implicit val HTMLElement_ondragstart				:AttributeAccess[ondragstart.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondragstart	= _)
	implicit val HTMLElement_onbeforecopy				:AttributeAccess[onbeforecopy.type,			HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.onbeforecopy	= _)
	implicit val HTMLElement_ondrag						:AttributeAccess[ondrag.type,				HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondrag	= _)
	implicit val HTMLElement_onmouseover				:AttributeAccess[onmouseover.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmouseover	= _)
	implicit val HTMLElement_onpause					:AttributeAccess[onpause.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onpause	= _)
	implicit val HTMLElement_onmousedown				:AttributeAccess[onmousedown.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmousedown	= _)
	implicit val HTMLElement_onclick					:AttributeAccess[onclick.type,				HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onclick	= _)
	implicit val HTMLElement_onwaiting					:AttributeAccess[onwaiting.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onwaiting	= _)
	implicit val HTMLElement_onstalled					:AttributeAccess[onstalled.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onstalled	= _)
	implicit val HTMLElement_onmousemove				:AttributeAccess[onmousemove.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.onmousemove	= _)
	implicit val HTMLElement_onratechange				:AttributeAccess[onratechange.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onratechange	= _)
	implicit val HTMLElement_contentEditable			:AttributeAccess[contentEditable.type,		HTMLElement,			String]									= AttributeAccess(_.contentEditable	= _)
	implicit val HTMLElement_tabIndex					:AttributeAccess[tabIndex.type,				HTMLElement,			Int]									= AttributeAccess(_.tabIndex	= _)
	implicit val HTMLElement_onprogress					:AttributeAccess[onprogress.type,			HTMLElement,			js.Function1[js.Any, ?]]				= AttributeAccess(_.onprogress	= _)
	implicit val HTMLElement_ondblclick					:AttributeAccess[ondblclick.type,			HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.ondblclick	= _)
	implicit val HTMLElement_oncontextmenu				:AttributeAccess[oncontextmenu.type,		HTMLElement,			js.Function1[MouseEvent, ?]]			= AttributeAccess(_.oncontextmenu	= _)
	implicit val HTMLElement_onloadedmetadata			:AttributeAccess[onloadedmetadata.type,		HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onloadedmetadata	= _)
	implicit val HTMLElement_onplay						:AttributeAccess[onplay.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onplay	= _)
	implicit val HTMLElement_onplaying					:AttributeAccess[onplaying.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onplaying	= _)
	implicit val HTMLElement_onfocusout					:AttributeAccess[onfocusout.type,			HTMLElement,			js.Function1[FocusEvent, ?]]			= AttributeAccess(_.onfocusout	= _)
	implicit val HTMLElement_onabort					:AttributeAccess[onabort.type,				HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onabort	= _)
	implicit val HTMLElement_onreadystatechange			:AttributeAccess[onreadystatechange.type,	HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onreadystatechange	= _)
	implicit val HTMLElement_onkeypress					:AttributeAccess[onkeypress.type,			HTMLElement,			js.Function1[KeyboardEvent, ?]]			= AttributeAccess(_.onkeypress	= _)
	implicit val HTMLElement_onloadeddata				:AttributeAccess[onloadeddata.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onloadeddata	= _)
	implicit val HTMLElement_onbeforedeactivate			:AttributeAccess[onbeforedeactivate.type,	HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onbeforedeactivate	= _)
	implicit val HTMLElement_onactivate					:AttributeAccess[onactivate.type,			HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onactivate	= _)
	implicit val HTMLElement_onselectstart				:AttributeAccess[onselectstart.type,		HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onselectstart	= _)
	implicit val HTMLElement_ontimeupdate				:AttributeAccess[ontimeupdate.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.ontimeupdate	= _)
	implicit val HTMLElement_onselect					:AttributeAccess[onselect.type,				HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onselect	= _)
	implicit val HTMLElement_ondrop						:AttributeAccess[ondrop.type,				HTMLElement,			js.Function1[DragEvent, ?]]				= AttributeAccess(_.ondrop	= _)
	implicit val HTMLElement_onended					:AttributeAccess[onended.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.onended	= _)
	implicit val HTMLElement_onscroll					:AttributeAccess[onscroll.type,				HTMLElement,			js.Function1[UIEvent, ?]]				= AttributeAccess(_.onscroll	= _)
	implicit val HTMLElement_oninput					:AttributeAccess[oninput.type,				HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.oninput	= _)
	implicit val HTMLElement_oncuechange				:AttributeAccess[oncuechange.type,			HTMLElement,			js.Function1[Event, ?]]					= AttributeAccess(_.oncuechange	= _)
	implicit val HTMLElement_spellcheck					:AttributeAccess[spellcheck.type,			HTMLElement,			Boolean]								= AttributeAccess(_.spellcheck	= _)
	implicit val HTMLElement_draggable					:AttributeAccess[draggable.type,			HTMLElement,			Boolean]								= AttributeAccess(_.draggable	= _)
	implicit val HTMLElement_onpointerover				:AttributeAccess[onpointerover.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerover	= _)
	implicit val HTMLElement_onpointerenter				:AttributeAccess[onpointerenter.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerenter	= _)
	implicit val HTMLElement_onpointerdown				:AttributeAccess[onpointerdown.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerdown	= _)
	implicit val HTMLElement_onpointermove				:AttributeAccess[onpointermove.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointermove	= _)
	implicit val HTMLElement_onpointerup				:AttributeAccess[onpointerup.type,			HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerup	= _)
	implicit val HTMLElement_onpointercancel			:AttributeAccess[onpointercancel.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointercancel	= _)
	implicit val HTMLElement_onpointerout				:AttributeAccess[onpointerout.type		,	HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerout	= _)
	implicit val HTMLElement_onpointerleave				:AttributeAccess[onpointerleave.type,		HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.onpointerleave	= _)
	implicit val HTMLElement_gotpointercapture			:AttributeAccess[gotpointercapture.type,	HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.gotpointercapture	= _)
	implicit val HTMLElement_lostpointercapture			:AttributeAccess[lostpointercapture.type,	HTMLElement,			js.Function1[PointerEvent, ?]]			= AttributeAccess(_.lostpointercapture	= _)

	implicit val HTMLObjectElement_width				:AttributeAccess[width.type,				HTMLObjectElement,		String]									= AttributeAccess(_.width	= _)
	// TODO check
	//implicit val HTMLObjectElement_object: Object = js.native
	implicit val HTMLObjectElement_alt					:AttributeAccess[alt.type,					HTMLObjectElement,		String]									= AttributeAccess(_.alt	= _)
	implicit val HTMLObjectElement_classid				:AttributeAccess[classid.type,				HTMLObjectElement,		String]									= AttributeAccess(_.classid	= _)
	implicit val HTMLObjectElement_name					:AttributeAccess[name.type,					HTMLObjectElement,		String]									= AttributeAccess(_.name	= _)
	implicit val HTMLObjectElement_useMap				:AttributeAccess[useMap.type,				HTMLObjectElement,		String]									= AttributeAccess(_.useMap	= _)
	implicit val HTMLObjectElement_data					:AttributeAccess[data.type,					HTMLObjectElement,		String]									= AttributeAccess(_.data	= _)
	implicit val HTMLObjectElement_height				:AttributeAccess[height.type,				HTMLObjectElement,		String]									= AttributeAccess(_.height	= _)
	implicit val HTMLObjectElement_altHtml				:AttributeAccess[altHtml.type,				HTMLObjectElement,		String]									= AttributeAccess(_.altHtml	= _)
	implicit val HTMLObjectElement_type					:AttributeAccess[`type`.type,				HTMLObjectElement,		String]									= AttributeAccess(_.`type`	= _)
	implicit val HTMLObjectElement_BaseHref				:AttributeAccess[BaseHref.type,				HTMLObjectElement,		String]									= AttributeAccess(_.BaseHref	= _)

	implicit val HTMLEmbedElement_width					:AttributeAccess[width.type,				HTMLEmbedElement,		String]									= AttributeAccess(_.width	= _)
	implicit val HTMLEmbedElement_src					:AttributeAccess[src.type,					HTMLEmbedElement,		String]									= AttributeAccess(_.src	= _)
	implicit val HTMLEmbedElement_height				:AttributeAccess[height.type,				HTMLEmbedElement,		String]									= AttributeAccess(_.height	= _)

	implicit val HTMLOptGroupElement_label				:AttributeAccess[labelAttr.type,			HTMLOptGroupElement,	String]									= AttributeAccess(_.label	= _)
	implicit val HTMLOptGroupElement_disabled			:AttributeAccess[disabled.type,				HTMLOptGroupElement,	Boolean]								= AttributeAccess(_.disabled	= _)

	implicit val HTMLVideoElement_width					:AttributeAccess[width.type,				HTMLVideoElement,		Int]									= AttributeAccess(_.width	= _)
	implicit val HTMLVideoElement_height				:AttributeAccess[height.type,				HTMLVideoElement,		Int]									= AttributeAccess(_.height	= _)
	implicit val HTMLVideoElement_poster				:AttributeAccess[poster.type,				HTMLVideoElement,		String]									= AttributeAccess(_.poster	= _)

	implicit val HTMLProgressElement_value				:AttributeAccess[value.type,				HTMLProgressElement,	Double]									= AttributeAccess(_.value	= _)
	implicit val HTMLProgressElement_max				:AttributeAccess[max.type,					HTMLProgressElement,	Double]									= AttributeAccess(_.max	= _)
	implicit val HTMLProgressElement_form				:AttributeAccess[formAttr.type,				HTMLProgressElement,	HTMLFormElement]						= AttributeAccess(_.form	= _)

	implicit val HTMLTrackElement_kind					:AttributeAccess[kind.type,					HTMLTrackElement,		String]									= AttributeAccess(_.kind	= _)
	implicit val HTMLTrackElement_src					:AttributeAccess[src.type,					HTMLTrackElement,		String]									= AttributeAccess(_.src	= _)
	implicit val HTMLTrackElement_srclang				:AttributeAccess[srclang.type,				HTMLTrackElement,		String]									= AttributeAccess(_.srclang	= _)
	implicit val HTMLTrackElement_label					:AttributeAccess[labelAttr.type,			HTMLTrackElement,		String]									= AttributeAccess(_.label	= _)

	implicit val HTMLFormElement_target					:AttributeAccess[target.type,				HTMLFormElement,		String]									= AttributeAccess(_.target	= _)
	implicit val HTMLFormElement_acceptCharset			:AttributeAccess[acceptCharset.type,		HTMLFormElement,		String]									= AttributeAccess(_.acceptCharset	= _)
	implicit val HTMLFormElement_enctype				:AttributeAccess[enctype.type,				HTMLFormElement,		String]									= AttributeAccess(_.enctype	= _)
	implicit val HTMLFormElement_action					:AttributeAccess[action.type,				HTMLFormElement,		String]									= AttributeAccess(_.action	= _)
	implicit val HTMLFormElement_name					:AttributeAccess[name.type,					HTMLFormElement,		String]									= AttributeAccess(_.name	= _)
	implicit val HTMLFormElement_method					:AttributeAccess[method.type,				HTMLFormElement,		String]									= AttributeAccess(_.method	= _)
	implicit val HTMLFormElement_encoding				:AttributeAccess[encoding.type,				HTMLFormElement,		String]									= AttributeAccess(_.encoding	= _)
	implicit val HTMLFormElement_autocomplete			:AttributeAccess[autocomplete.type,			HTMLFormElement,		String]									= AttributeAccess(_.autocomplete	= _)
	implicit val HTMLFormElement_noValidate				:AttributeAccess[noValidate.type,			HTMLFormElement,		Boolean]								= AttributeAccess(_.noValidate	= _)
}
