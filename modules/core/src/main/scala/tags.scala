package sjs.diffless

import org.scalajs.dom.*

/** Tag values for all HTML tags */
object tags {
	val a			:Tag[HTMLAnchorElement]				= Tag[HTMLAnchorElement]("a")
	val abbr		:Tag[HTMLElement]					= Tag[HTMLElement]("abbr")
	val address		:Tag[HTMLElement]					= Tag[HTMLElement]("address")
	val acronym		:Tag[HTMLElement]					= Tag[HTMLElement]("acronym")
//	val applet		:Tag[HTMLAppletElement]				= Tag[HTMLAppletElement]("applet")
	val area		:Tag[HTMLAreaElement]				= Tag[HTMLAreaElement]("area")
	val article		:Tag[HTMLElement]					= Tag[HTMLElement]("article")
	val aside		:Tag[HTMLElement]					= Tag[HTMLElement]("aside")
	val audio		:Tag[HTMLAudioElement]				= Tag[HTMLAudioElement]("audio")
	val b			:Tag[HTMLElement]					= Tag[HTMLElement]("b")
	val base		:Tag[HTMLBaseElement]				= Tag[HTMLBaseElement]("base")
//	val basefont	:Tag[HTMLBaseFontElement]			= Tag[HTMLBaseFontElement]("basefont")
	val bdi			:Tag[HTMLElement]					= Tag[HTMLElement]("bdi")
	val bdo			:Tag[HTMLElement]					= Tag[HTMLElement]("bdo")
//	val bgsound		:Tag[HTMLBGSoundElement]			= Tag[HTMLBGSoundElement]("bgsound")
	val big			:Tag[HTMLElement]					= Tag[HTMLElement]("big")
	val blink		:Tag[HTMLUnknownElement]			= Tag[HTMLUnknownElement]("blink")
	val blockquote	:Tag[HTMLQuoteElement]				= Tag[HTMLQuoteElement]("blockquote")
	val body		:Tag[HTMLBodyElement]				= Tag[HTMLBodyElement]("body")
	val br			:Tag[HTMLBRElement]					= Tag[HTMLBRElement]("br")
	val button		:Tag[HTMLButtonElement]				= Tag[HTMLButtonElement]("button")
	val canvas		:Tag[HTMLCanvasElement]				= Tag[HTMLCanvasElement]("canvas")
	val caption		:Tag[HTMLTableCaptionElement]		= Tag[HTMLTableCaptionElement]("caption"	)
	val center		:Tag[HTMLElement]					= Tag[HTMLElement]("center")
	val cite		:Tag[HTMLElement]					= Tag[HTMLElement]("cite")
	val code		:Tag[HTMLElement]					= Tag[HTMLElement]("code")
	val col			:Tag[HTMLTableColElement]			= Tag[HTMLTableColElement]("col")
	val colgroup	:Tag[HTMLTableColElement]			= Tag[HTMLTableColElement]("colgroup")
//	val command		:Tag[HTMLCommandElement]			= Tag[HTMLCommandElement]("command")
//	val content		:Tag[HTMLContentElement]			= Tag[HTMLContentElement]("content")
	val dd			:Tag[HTMLElement]					= Tag[HTMLElement]("dd")
	val dl			:Tag[HTMLDListElement]				= Tag[HTMLDListElement]("dl")
	val dt			:Tag[HTMLElement]					= Tag[HTMLElement]("dt")
//	val data		:Tag[HTMLDataElement]				= Tag[HTMLDataElement]("data")
	val datalist	:Tag[HTMLDataListElement]			= Tag[HTMLDataListElement]("datalist")
	val dfn			:Tag[HTMLElement]					= Tag[HTMLElement]("dfn")
	val del			:Tag[HTMLModElement]				= Tag[HTMLModElement]("del")
//	val details		:Tag[HTMLDetailsElement]			= Tag[HTMLDetailsElement]("details")
//	val dialog		:Tag[HTMLDialogElement]				= Tag[HTMLDialogElement]("dialog")
//	val dir			:Tag[HTMLDirectoryElement]			= Tag[HTMLDirectoryElement]("dir")
	val div			:Tag[HTMLDivElement]				= Tag[HTMLDivElement]("div")
	val element		:Tag[HTMLElement]					= Tag[HTMLElement]("element")
	val em			:Tag[HTMLElement]					= Tag[HTMLElement]("em")
	val embed		:Tag[HTMLEmbedElement]				= Tag[HTMLEmbedElement]("embed")
	val fieldset	:Tag[HTMLFieldSetElement]			= Tag[HTMLFieldSetElement]("fieldset")
	val figcaption	:Tag[HTMLElement]					= Tag[HTMLElement]("figcaption")
	val figure		:Tag[HTMLElement]					= Tag[HTMLElement]("figure")
//	val font		:Tag[HTMLFontElement]				= Tag[HTMLFontElement]("font")
	val footer		:Tag[HTMLElement]					= Tag[HTMLElement]("footer")
	val form		:Tag[HTMLFormElement]				= Tag[HTMLFormElement]("form")
//	val frame		:Tag[HTMLFrameElement]				= Tag[HTMLFrameElement]("frame")
//	val frameset	:Tag[HTMLFrameSetElement]			= Tag[HTMLFrameSetElement]("frameset")
	val h1			:Tag[HTMLHeadingElement]			= Tag[HTMLHeadingElement]("h1")
	val h2			:Tag[HTMLHeadingElement]			= Tag[HTMLHeadingElement]("h2")
	val h3			:Tag[HTMLHeadingElement]			= Tag[HTMLHeadingElement]("h3")
	val h4			:Tag[HTMLHeadingElement]			= Tag[HTMLHeadingElement]("h4")
	val h5			:Tag[HTMLHeadingElement]			= Tag[HTMLHeadingElement]("h5")
	val h6			:Tag[HTMLHeadingElement]			= Tag[HTMLHeadingElement]("h6")
	val hr			:Tag[HTMLHRElement]					= Tag[HTMLHRElement]("hr")
	val head		:Tag[HTMLHeadElement]				= Tag[HTMLHeadElement]("head")
	val header		:Tag[HTMLElement]					= Tag[HTMLElement]("header")
	val hgroup		:Tag[HTMLElement]					= Tag[HTMLElement]("hgroup")
	val html		:Tag[HTMLHtmlElement]				= Tag[HTMLHtmlElement]("html")
	val i			:Tag[HTMLElement]					= Tag[HTMLElement]("i")
	val iframe		:Tag[HTMLIFrameElement]				= Tag[HTMLIFrameElement]("iframe")
	val img			:Tag[HTMLImageElement]				= Tag[HTMLImageElement]("img")
	val ins			:Tag[HTMLModElement]				= Tag[HTMLModElement]("ins")
	val input		:Tag[HTMLInputElement]				= Tag[HTMLInputElement]("input")
//	val isindex		:Tag[HTMLIsIndexElement]			= Tag[HTMLIsIndexElement]("isindex")
	val kbd			:Tag[HTMLElement]					= Tag[HTMLElement]("kbd")
//	val keygen		:Tag[HTMLKeygenElement]				= Tag[HTMLKeygenElement]("keygen")
	val li			:Tag[HTMLLIElement]					= Tag[HTMLLIElement]("li")
	val label		:Tag[HTMLLabelElement]				= Tag[HTMLLabelElement]("label")
	val legend		:Tag[HTMLLegendElement]				= Tag[HTMLLegendElement]("legend")
	val link		:Tag[HTMLLinkElement]				= Tag[HTMLLinkElement]("link")
	val listing		:Tag[HTMLElement]					= Tag[HTMLElement]("listing")
	val main		:Tag[HTMLElement]					= Tag[HTMLElement]("main")
	val map			:Tag[HTMLMapElement]				= Tag[HTMLMapElement]("map")
	val mark		:Tag[HTMLElement]					= Tag[HTMLElement]("mark")
//	val marquee		:Tag[HTMLMarqueeElement]			= Tag[HTMLMarqueeElement]("marquee")
	val menu		:Tag[HTMLMenuElement]				= Tag[HTMLMenuElement]("menu")
//	val menuitem		:Tag[HTMLMenuItemElement]		= Tag[HTMLMenuItemElement]("menuitem")
	val meta		:Tag[HTMLMetaElement]				= Tag[HTMLMetaElement]("meta")
//	val meter		:Tag[HTMLMeterElement]				= Tag[HTMLMeterElement]("meter")
	val nav			:Tag[HTMLElement]					= Tag[HTMLElement]("nav")
	val noembed		:Tag[HTMLUnknownElement]			= Tag[HTMLUnknownElement]("noembed")
	val noscript	:Tag[HTMLElement]					= Tag[HTMLElement]("noscript")
	val ol			:Tag[HTMLOListElement]				= Tag[HTMLOListElement]("ol")
	val `object`	:Tag[HTMLObjectElement]				= Tag[HTMLObjectElement]("object")
	val optgroup	:Tag[HTMLOptGroupElement]			= Tag[HTMLOptGroupElement]("optgroup")
	val option		:Tag[HTMLOptionElement]				= Tag[HTMLOptionElement]("option")
//	val output		:Tag[HTMLOutputElement]				= Tag[HTMLOutputElement]("output")
	val p			:Tag[HTMLParagraphElement]			= Tag[HTMLParagraphElement]("p")
	val param		:Tag[HTMLParamElement]				= Tag[HTMLParamElement]("param")
	val plaintext	:Tag[HTMLElement]					= Tag[HTMLElement]("plaintext")
	// TODO not in html5?
	//val phrase		:Tag[HTMLPhraseElement]				= Tag[HTMLPhraseElement]("phrase")
	val pre			:Tag[HTMLPreElement]				= Tag[HTMLPreElement]("pre")
	val progress	:Tag[HTMLProgressElement]			= Tag[HTMLProgressElement]("progress")
	val q			:Tag[HTMLQuoteElement]				= Tag[HTMLQuoteElement]("q")
	val rp			:Tag[HTMLElement]					= Tag[HTMLElement]("rp")
	val rt			:Tag[HTMLElement]					= Tag[HTMLElement]("rt")
	// TODO not in html5?
	val rtc			:Tag[HTMLElement]					= Tag[HTMLElement]("rtc")
	val ruby		:Tag[HTMLElement]					= Tag[HTMLElement]("ruby")
	val s			:Tag[HTMLElement]					= Tag[HTMLElement]("s")
	val samp		:Tag[HTMLElement]					= Tag[HTMLElement]("samp")
//	val shadow		:Tag[HTMLShadowElement]				= Tag[HTMLShadowElement]("shadow")
	val small		:Tag[HTMLElement]					= Tag[HTMLElement]("small")
	val script		:Tag[HTMLScriptElement]				= Tag[HTMLScriptElement]("script")
	val section		:Tag[HTMLElement]					= Tag[HTMLElement]("section")
	val select		:Tag[HTMLSelectElement]				= Tag[HTMLSelectElement]("select")
	val source		:Tag[HTMLSourceElement]				= Tag[HTMLSourceElement]("source")
	val spacer		:Tag[HTMLUnknownElement]			= Tag[HTMLUnknownElement]("spacer")
	val span		:Tag[HTMLSpanElement]				= Tag[HTMLSpanElement]("span")
	val strike		:Tag[HTMLElement]					= Tag[HTMLElement]("strike")
	val strong		:Tag[HTMLElement]					= Tag[HTMLElement]("strong")
	val style		:Tag[HTMLStyleElement]				= Tag[HTMLStyleElement]("style")
	val sub			:Tag[HTMLElement]					= Tag[HTMLElement]("sub")
	val summary		:Tag[HTMLElement]					= Tag[HTMLElement]("summary")
	val sup			:Tag[HTMLElement]					= Tag[HTMLElement]("sup")
	val table		:Tag[HTMLTableElement]				= Tag[HTMLTableElement]("table")
//	val time		:Tag[HTMLTimeElement]				= Tag[HTMLTimeElement]("time")
	val tbody		:Tag[HTMLTableSectionElement]		= Tag[HTMLTableSectionElement]("tbody")
	val td			:Tag[HTMLTableCellElement ]			= Tag[HTMLTableCellElement ]("td")
	val tfoot		:Tag[HTMLTableSectionElement]		= Tag[HTMLTableSectionElement]("tfoot")
	val th			:Tag[HTMLTableCellElement]			= Tag[HTMLTableCellElement]("th")
	val thead		:Tag[HTMLTableSectionElement]		= Tag[HTMLTableSectionElement]("thead")
	val tr			:Tag[HTMLTableRowElement]			= Tag[HTMLTableRowElement]("tr")
//	val template		:Tag[HTMLTemplateElement]		= Tag[HTMLTemplateElement]("template")
	val textarea	:Tag[HTMLTextAreaElement]			= Tag[HTMLTextAreaElement]("textarea")
	val title		:Tag[HTMLTitleElement]				= Tag[HTMLTitleElement]("title")
	val track		:Tag[HTMLTrackElement]				= Tag[HTMLTrackElement]("track")
	val tt			:Tag[HTMLElement]					= Tag[HTMLElement]("tt")
	val u			:Tag[HTMLElement]					= Tag[HTMLElement]("u")
	val ul			:Tag[HTMLUListElement]				= Tag[HTMLUListElement]("ul")
	val `var`		:Tag[HTMLElement]					= Tag[HTMLElement]("var")
	val video		:Tag[HTMLVideoElement]				= Tag[HTMLVideoElement]("video")
	val wbr			:Tag[HTMLElement]					= Tag[HTMLElement]("wbr")
	val xmp			:Tag[HTMLElement]					= Tag[HTMLElement]("xmp")
}
