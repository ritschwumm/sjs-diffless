package sjs.diffless

import org.scalajs.dom.*

/** event emitters - prefer these over plain attribute setters */
object emits {
	def onCopy				[N<:Element]:Emit.EmitBuilder[N,ClipboardEvent]		= Emit.emitBuilder(_.oncopy				= _)
	def onCut				[N<:Element]:Emit.EmitBuilder[N,ClipboardEvent]		= Emit.emitBuilder(_.oncut				= _)
	def onPaste				[N<:Element]:Emit.EmitBuilder[N,ClipboardEvent]		= Emit.emitBuilder(_.onpaste			= _)

	def onAbort				[N<:HTMLElement]:Emit.EmitBuilder[N,UIEvent]		= Emit.emitBuilder(_.onabort			= _)
	def onActivate			[N<:HTMLElement]:Emit.EmitBuilder[N,UIEvent]		= Emit.emitBuilder(_.onactivate			= _)
	def onBeforeActivate	[N<:HTMLElement]:Emit.EmitBuilder[N,UIEvent]		= Emit.emitBuilder(_.onbeforeactivate	= _)
	def onBeforeCopy		[N<:HTMLElement]:Emit.EmitBuilder[N,DragEvent]		= Emit.emitBuilder(_.onbeforecopy		= _)
	def onBeforeCut			[N<:HTMLElement]:Emit.EmitBuilder[N,DragEvent]		= Emit.emitBuilder(_.onbeforecut		= _)
	def onBeforeDeactivate	[N<:HTMLElement]:Emit.EmitBuilder[N,UIEvent]		= Emit.emitBuilder(_.onbeforedeactivate	= _)
	def onBeforePaste		[N<:HTMLElement]:Emit.EmitBuilder[N,DragEvent]		= Emit.emitBuilder(_.onbeforepaste		= _)
	def onBlur				[N<:HTMLElement]:Emit.EmitBuilder[N,FocusEvent]		= Emit.emitBuilder(_.onblur				= _)
	def onCanPlay			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.oncanplay			= _)
	def onCanPlayThrough	[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.oncanplaythrough	= _)
	def onChange			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onchange			= _)
	def onClick				[N<:HTMLElement]:Emit.EmitBuilder[N,MouseEvent]		= Emit.emitBuilder(_.onclick			= _)
	def onContextMenu		[N<:HTMLElement]:Emit.EmitBuilder[N,MouseEvent]		= Emit.emitBuilder(_.oncontextmenu		= _)
	def onCueChange			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.oncuechange		= _)
	def onDblClick			[N<:HTMLElement]:Emit.EmitBuilder[N,MouseEvent]		= Emit.emitBuilder(_.ondblclick			= _)
	def onDeactivate		[N<:HTMLElement]:Emit.EmitBuilder[N,UIEvent]		= Emit.emitBuilder(_.ondeactivate		= _)
	def onDrag				[N<:HTMLElement]:Emit.EmitBuilder[N,DragEvent]		= Emit.emitBuilder(_.ondrag				= _)
	def onDragEnd			[N<:HTMLElement]:Emit.EmitBuilder[N,DragEvent]		= Emit.emitBuilder(_.ondragend			= _)
	def onDragEnter			[N<:HTMLElement]:Emit.EmitBuilder[N,DragEvent]		= Emit.emitBuilder(_.ondragenter		= _)
	def onDragLeave			[N<:HTMLElement]:Emit.EmitBuilder[N,DragEvent]		= Emit.emitBuilder(_.ondragleave		= _)
	def onDragOver			[N<:HTMLElement]:Emit.EmitBuilder[N,DragEvent]		= Emit.emitBuilder(_.ondragover			= _)
	def onDragStart			[N<:HTMLElement]:Emit.EmitBuilder[N,DragEvent]		= Emit.emitBuilder(_.ondragstart		= _)
	def onDrop				[N<:HTMLElement]:Emit.EmitBuilder[N,DragEvent]		= Emit.emitBuilder(_.ondrop				= _)
	def onDurationChange	[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.ondurationchange	= _)
	def onEmptied			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onemptied			= _)
	def onEnded				[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onended			= _)
	def onFocus				[N<:HTMLElement]:Emit.EmitBuilder[N,FocusEvent]		= Emit.emitBuilder(_.onfocus			= _)
	def onFocusIn			[N<:HTMLElement]:Emit.EmitBuilder[N,FocusEvent]		= Emit.emitBuilder(_.onfocusin			= _)
	def onFocusOut			[N<:HTMLElement]:Emit.EmitBuilder[N,FocusEvent]		= Emit.emitBuilder(_.onfocusout			= _)
	def onHelp				[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onhelp				= _)
	def onInput				[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.oninput			= _)
	def onKeyDown			[N<:HTMLElement]:Emit.EmitBuilder[N,KeyboardEvent]	= Emit.emitBuilder(_.onkeydown			= _)
	def onKeyPress			[N<:HTMLElement]:Emit.EmitBuilder[N,KeyboardEvent]	= Emit.emitBuilder(_.onkeypress			= _)
	def onKeyUp				[N<:HTMLElement]:Emit.EmitBuilder[N,KeyboardEvent]	= Emit.emitBuilder(_.onkeyup			= _)
	def onLoadedData		[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onloadeddata		= _)
	def onLoadedMetadata	[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onloadedmetadata	= _)
	def onLoadStart			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onloadstart		= _)
	def onMouseDown			[N<:HTMLElement]:Emit.EmitBuilder[N,MouseEvent]		= Emit.emitBuilder(_.onmousedown		= _)
	def onMouseEnter		[N<:HTMLElement]:Emit.EmitBuilder[N,MouseEvent]		= Emit.emitBuilder(_.onmouseenter		= _)
	def onMouseLeave		[N<:HTMLElement]:Emit.EmitBuilder[N,MouseEvent]		= Emit.emitBuilder(_.onmouseleave		= _)
	def onMouseMove			[N<:HTMLElement]:Emit.EmitBuilder[N,MouseEvent]		= Emit.emitBuilder(_.onmousemove		= _)
	def onMouseOut			[N<:HTMLElement]:Emit.EmitBuilder[N,MouseEvent]		= Emit.emitBuilder(_.onmouseout			= _)
	def onMouseOver			[N<:HTMLElement]:Emit.EmitBuilder[N,MouseEvent]		= Emit.emitBuilder(_.onmouseover		= _)
	def onMouseUp			[N<:HTMLElement]:Emit.EmitBuilder[N,MouseEvent]		= Emit.emitBuilder(_.onmouseup			= _)
	def onMouseWheel		[N<:HTMLElement]:Emit.EmitBuilder[N,WheelEvent]		= Emit.emitBuilder(_.onmousewheel		= _)
	def onPause				[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onpause			= _)
	def onPlay				[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onplay				= _)
	def onPlaying			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onplaying			= _)
	def onPointerCancel		[N<:HTMLElement]:Emit.EmitBuilder[N,PointerEvent]	= Emit.emitBuilder(_.onpointercancel	= _)
	def onPointerDown		[N<:HTMLElement]:Emit.EmitBuilder[N,PointerEvent]	= Emit.emitBuilder(_.onpointerdown		= _)
	def onPointerEnter		[N<:HTMLElement]:Emit.EmitBuilder[N,PointerEvent]	= Emit.emitBuilder(_.onpointerenter		= _)
	def onPointerLeave		[N<:HTMLElement]:Emit.EmitBuilder[N,PointerEvent]	= Emit.emitBuilder(_.onpointerleave		= _)
	def onPointerMove		[N<:HTMLElement]:Emit.EmitBuilder[N,PointerEvent]	= Emit.emitBuilder(_.onpointermove		= _)
	def onPointerOut		[N<:HTMLElement]:Emit.EmitBuilder[N,PointerEvent]	= Emit.emitBuilder(_.onpointerout		= _)
	def onPointerOver		[N<:HTMLElement]:Emit.EmitBuilder[N,PointerEvent]	= Emit.emitBuilder(_.onpointerover		= _)
	def onPointerUp			[N<:HTMLElement]:Emit.EmitBuilder[N,PointerEvent]	= Emit.emitBuilder(_.onpointerup		= _)
	// TODO type?
	//def onProgress			[N<:HTMLElement]:Emit.EmitBuilder[N,js.Any]		= Emit.emitBuilder(_.onprogress	= _)
	def onRateChange		[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onratechange		= _)
	def onReadyStateChange	[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onreadystatechange	= _)
	def onReset				[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onreset		= _)
	def onScroll			[N<:HTMLElement]:Emit.EmitBuilder[N,UIEvent]		= Emit.emitBuilder(_.onscroll		= _)
	def onSeeked			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onseeked		= _)
	def onSeeking			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onseeking		= _)
	def onSelect			[N<:HTMLElement]:Emit.EmitBuilder[N,UIEvent]		= Emit.emitBuilder(_.onselect		= _)
	def onSelectStart		[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onselectstart	= _)
	def onStalled			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onstalled		= _)
	def onSubmit			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onsubmit		= _)
	def onSuspend			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onsuspend		= _)
	def onTimeUpdate		[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.ontimeupdate	= _)
	def onVolumeChange		[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onvolumechange	= _)
	def onWaiting			[N<:HTMLElement]:Emit.EmitBuilder[N,Event]			= Emit.emitBuilder(_.onwaiting		= _)
}
